<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>逆流的鱼yuiop</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-24T09:49:55.303Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>逆流的鱼yuiop</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>FFmpeg总结（十一）用ffmpeg进行转格式，Android下播放网络音频流</title>
    <link href="http://yoursite.com/2017/06/24/FFmpeg%E6%80%BB%E7%BB%93%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%94%A8ffmpeg%E8%BF%9B%E8%A1%8C%E8%BD%AC%E6%A0%BC%E5%BC%8F%EF%BC%8CAndroid%E4%B8%8B%E6%92%AD%E6%94%BE%E7%BD%91%E7%BB%9C%E9%9F%B3%E9%A2%91%E6%B5%81/"/>
    <id>http://yoursite.com/2017/06/24/FFmpeg总结（十一）用ffmpeg进行转格式，Android下播放网络音频流/</id>
    <published>2017-06-24T09:44:43.000Z</published>
    <updated>2017-06-24T09:49:55.303Z</updated>
    
    <content type="html"><![CDATA[<center><br><img src="/upload/assassin.jpg" alt="这里写图片描述"><br></center>

<p>思路：<br>1、mp3转成pcm(音频数据)，ffmpeg做的事<br>2、OpenSL ES引擎创建AudioPlayer，实际调用了AudioTrack<br><a id="more"></a></p>
<p>遇到的错误：<br>Error #include nested too deeply<br>原因：c文件互相引用<br>解决方案：</p>
<ul>
<li>1、将两个头文件共用的那一部分抽出来单独建一个头文件。</li>
<li>2、加预处理#ifndef.. #define…#endif</li>
</ul>
<p>x86平台没有编译出来so，怀疑存在版本不兼容，编译别的相关so，x86下没有异常。有空这里再更新下原因</p>
<p><img src="http://img.blog.csdn.net/20170507110911572?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVqanVubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>studio写ndk相当方便：</p>
<p><img src="http://img.blog.csdn.net/20170507104756342?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVqanVubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20170507104942030?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVqanVubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>工程结构：</p>
<p><img src="http://img.blog.csdn.net/20170507104526918?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVqanVubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>Java代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.hejunlin.ffmpegaudio;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.EditText;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> EditText mInput;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        mInput = (EditText) findViewById(R.id.et_input);</div><div class="line">     mInput.setText(<span class="string">"http://qzone.60dj.com/huiyuan/201704/19/201704190533197825_35285.mp3"</span>);</div><div class="line">        findViewById(R.id.bt_play).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">                NativePlayer.play(mInput.getText().toString().trim());</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        findViewById(R.id.bt_pause).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">                NativePlayer.stop();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>NativePlayer:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.hejunlin.ffmpegaudio;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by hejunlin on 17/5/6.</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NativePlayer</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        System.loadLibrary(<span class="string">"NativePlayer"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(String url)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>布局文件：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/activity_main"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.hejunlin.ffmpegaudio.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/tv_input"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:padding</span>=<span class="string">"10dp"</span></div><div class="line">        <span class="attr">android:layout_marginTop</span>=<span class="string">"30dp"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"播放链接:"</span></div><div class="line">        <span class="attr">android:textSize</span>=<span class="string">"20sp"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/et_input"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_toRightOf</span>=<span class="string">"@id/tv_input"</span></div><div class="line">        <span class="attr">android:padding</span>=<span class="string">"10dp"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_below</span>=<span class="string">"@id/et_input"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line"></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/bt_play"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"60dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@drawable/button_shape"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"@color/white"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"播放"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/bt_pause"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@drawable/button_shape"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"@color/white"</span></div><div class="line">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"80dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"暂停"</span> /&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>jni相关代码：<br>OpenSL_ES_Core.c<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">// Created by hejunlin on 17/5/6.</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"OpenSL_ES_Core.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"FFmpegCore.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SLES/OpenSLES.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SLES/OpenSLES_Android.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="comment">// for native asset manager</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;android/asset_manager.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;android/asset_manager_jni.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"log.h"</span></span></div><div class="line"></div><div class="line"><span class="comment">// engine interfaces</span></div><div class="line"><span class="keyword">static</span> SLObjectItf engineObject = <span class="literal">NULL</span>;</div><div class="line"><span class="keyword">static</span> SLEngineItf engineEngine;</div><div class="line"></div><div class="line"><span class="comment">// output mix interfaces</span></div><div class="line"><span class="keyword">static</span> SLObjectItf outputMixObject = <span class="literal">NULL</span>;</div><div class="line"><span class="keyword">static</span> SLEnvironmentalReverbItf outputMixEnvironmentalReverb = <span class="literal">NULL</span>;</div><div class="line"></div><div class="line"><span class="comment">// buffer queue player interfaces</span></div><div class="line"><span class="keyword">static</span> SLObjectItf bqPlayerObject = <span class="literal">NULL</span>;</div><div class="line"><span class="keyword">static</span> SLPlayItf bqPlayerPlay;</div><div class="line"><span class="keyword">static</span> SLAndroidSimpleBufferQueueItf bqPlayerBufferQueue;</div><div class="line"><span class="keyword">static</span> SLEffectSendItf bqPlayerEffectSend;</div><div class="line"><span class="keyword">static</span> SLMuteSoloItf bqPlayerMuteSolo;</div><div class="line"><span class="keyword">static</span> SLVolumeItf bqPlayerVolume;</div><div class="line"></div><div class="line"><span class="comment">// aux effect on the output mix, used by the buffer queue player</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> SLEnvironmentalReverbSettings reverbSettings =</div><div class="line">        SL_I3DL2_ENVIRONMENT_PRESET_STONECORRIDOR;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">void</span> *buffer;</div><div class="line"><span class="keyword">static</span> <span class="keyword">size_t</span> bufferSize;</div><div class="line"></div><div class="line"><span class="comment">// this callback handler is called every time a buffer finishes playing</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">bqPlayerCallback</span><span class="params">(SLAndroidSimpleBufferQueueItf bq, <span class="keyword">void</span> *context)</span></span></div><div class="line">&#123;</div><div class="line">    LOGD(<span class="string">"&gt;&gt; buffere queue callback"</span>);</div><div class="line">    assert(bq == bqPlayerBufferQueue);</div><div class="line">    bufferSize = <span class="number">0</span>;</div><div class="line">    <span class="comment">//assert(NULL == context);</span></div><div class="line">    getPCM(&amp;buffer, &amp;bufferSize);</div><div class="line">    <span class="comment">// for streaming playback, replace this test by logic to find and fill the next buffer</span></div><div class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> != buffer &amp;&amp; <span class="number">0</span> != bufferSize) &#123;</div><div class="line">        SLresult result;</div><div class="line">        <span class="comment">// enqueue another buffer</span></div><div class="line">        result = (*bqPlayerBufferQueue)-&gt;Enqueue(bqPlayerBufferQueue, buffer,</div><div class="line">                                                 bufferSize);</div><div class="line">        <span class="comment">// the most likely other result is SL_RESULT_BUFFER_INSUFFICIENT,</span></div><div class="line">        <span class="comment">// which for this code example would indicate a programming error</span></div><div class="line">        assert(SL_RESULT_SUCCESS == result);</div><div class="line"></div><div class="line">        (<span class="keyword">void</span>)result;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">initOpenSLES</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    LOGD(<span class="string">"&gt;&gt; initOpenSLES..."</span>);</div><div class="line">    SLresult result;</div><div class="line"></div><div class="line">    <span class="comment">// 1、create engine</span></div><div class="line">    result = slCreateEngine(&amp;engineObject, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</div><div class="line">    LOGD(<span class="string">"&gt;&gt; initOpenSLES... step 1, result = %d"</span>, result);</div><div class="line"></div><div class="line">    <span class="comment">// 2、realize the engine</span></div><div class="line">    result = (*engineObject)-&gt;Realize(engineObject, SL_BOOLEAN_FALSE);</div><div class="line">    LOGD(<span class="string">"&gt;&gt; initOpenSLES...step 2, result = %d"</span>, result);</div><div class="line"></div><div class="line">    <span class="comment">// 3、get the engine interface, which is needed in order to create other objects</span></div><div class="line">    result = (*engineObject)-&gt;GetInterface(engineObject, SL_IID_ENGINE, &amp;engineEngine);</div><div class="line">    LOGD(<span class="string">"&gt;&gt; initOpenSLES...step 3, result = %d"</span>, result);</div><div class="line"></div><div class="line">    <span class="comment">// 4、create output mix, with environmental reverb specified as a non-required interface</span></div><div class="line">    <span class="keyword">const</span> SLInterfaceID ids[<span class="number">1</span>] = &#123;SL_IID_ENVIRONMENTALREVERB&#125;;</div><div class="line">    <span class="keyword">const</span> SLboolean req[<span class="number">1</span>] = &#123;SL_BOOLEAN_FALSE&#125;;</div><div class="line">    result = (*engineEngine)-&gt;CreateOutputMix(engineEngine, &amp;outputMixObject, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">    LOGD(<span class="string">"&gt;&gt; initOpenSLES...step 4, result = %d"</span>, result);</div><div class="line"></div><div class="line">    <span class="comment">// 5、realize the output mix</span></div><div class="line">    result = (*outputMixObject)-&gt;Realize(outputMixObject, SL_BOOLEAN_FALSE);</div><div class="line">    LOGD(<span class="string">"&gt;&gt; initOpenSLES...step 5, result = %d"</span>, result);</div><div class="line"></div><div class="line">    <span class="comment">// 6、get the environmental reverb interface</span></div><div class="line">    <span class="comment">// this could fail if the environmental reverb effect is not available,</span></div><div class="line">    <span class="comment">// either because the feature is not present, excessive CPU load, or</span></div><div class="line">    <span class="comment">// the required MODIFY_AUDIO_SETTINGS permission was not requested and granted</span></div><div class="line">    result = (*outputMixObject)-&gt;GetInterface(outputMixObject, SL_IID_ENVIRONMENTALREVERB,</div><div class="line">                                              &amp;outputMixEnvironmentalReverb);</div><div class="line">    <span class="keyword">if</span> (SL_RESULT_SUCCESS == result) &#123;</div><div class="line">        result = (*outputMixEnvironmentalReverb)-&gt;SetEnvironmentalReverbProperties(</div><div class="line">                outputMixEnvironmentalReverb, &amp;reverbSettings);</div><div class="line">        LOGD(<span class="string">"&gt;&gt; initOpenSLES...step 6, result = %d"</span>, result);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// init buffer queue</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">initBufferQueue</span><span class="params">(<span class="keyword">int</span> rate, <span class="keyword">int</span> channel, <span class="keyword">int</span> bitsPerSample)</span></span></div><div class="line">&#123;</div><div class="line">    LOGD(<span class="string">"&gt;&gt; initBufferQueue"</span>);</div><div class="line">    SLresult result;</div><div class="line"></div><div class="line">    <span class="comment">// configure audio source</span></div><div class="line">    SLDataLocator_AndroidSimpleBufferQueue loc_bufq = &#123;SL_DATALOCATOR_ANDROIDSIMPLEBUFFERQUEUE, <span class="number">2</span>&#125;;</div><div class="line">    SLDataFormat_PCM format_pcm;</div><div class="line">    format_pcm.formatType = SL_DATAFORMAT_PCM;</div><div class="line">    format_pcm.numChannels = channel;</div><div class="line">    format_pcm.samplesPerSec = rate * <span class="number">1000</span>;</div><div class="line">    format_pcm.bitsPerSample = bitsPerSample;</div><div class="line">    format_pcm.containerSize = <span class="number">16</span>;</div><div class="line">    <span class="keyword">if</span> (channel == <span class="number">2</span>)</div><div class="line">        format_pcm.channelMask = SL_SPEAKER_FRONT_LEFT | SL_SPEAKER_FRONT_RIGHT;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        format_pcm.channelMask = SL_SPEAKER_FRONT_CENTER;</div><div class="line">    format_pcm.endianness = SL_BYTEORDER_LITTLEENDIAN;</div><div class="line">    SLDataSource audioSrc = &#123;&amp;loc_bufq, &amp;format_pcm&#125;;</div><div class="line"></div><div class="line">    <span class="comment">// configure audio sink</span></div><div class="line">    SLDataLocator_OutputMix loc_outmix = &#123;SL_DATALOCATOR_OUTPUTMIX, outputMixObject&#125;;</div><div class="line">    SLDataSink audioSnk = &#123;&amp;loc_outmix, <span class="literal">NULL</span>&#125;;</div><div class="line"></div><div class="line">    <span class="comment">// create audio player</span></div><div class="line">    <span class="keyword">const</span> SLInterfaceID ids[<span class="number">3</span>] = &#123;SL_IID_BUFFERQUEUE, SL_IID_EFFECTSEND,</div><div class="line">            <span class="comment">/*SL_IID_MUTESOLO,*/</span> SL_IID_VOLUME&#125;;</div><div class="line">    <span class="keyword">const</span> SLboolean req[<span class="number">3</span>] = &#123;SL_BOOLEAN_TRUE, SL_BOOLEAN_TRUE,</div><div class="line">            <span class="comment">/*SL_BOOLEAN_TRUE,*/</span> SL_BOOLEAN_TRUE&#125;;</div><div class="line">    result = (*engineEngine)-&gt;CreateAudioPlayer(engineEngine, &amp;bqPlayerObject, &amp;audioSrc, &amp;audioSnk,</div><div class="line">                                                <span class="number">3</span>, ids, req);</div><div class="line">    assert(SL_RESULT_SUCCESS == result);</div><div class="line">    (<span class="keyword">void</span>)result;</div><div class="line"></div><div class="line">    <span class="comment">// realize the player</span></div><div class="line">    result = (*bqPlayerObject)-&gt;Realize(bqPlayerObject, SL_BOOLEAN_FALSE);</div><div class="line">    assert(SL_RESULT_SUCCESS == result);</div><div class="line">    (<span class="keyword">void</span>)result;</div><div class="line"></div><div class="line">    <span class="comment">// get the play interface</span></div><div class="line">    result = (*bqPlayerObject)-&gt;GetInterface(bqPlayerObject, SL_IID_PLAY, &amp;bqPlayerPlay);</div><div class="line">    assert(SL_RESULT_SUCCESS == result);</div><div class="line">    (<span class="keyword">void</span>)result;</div><div class="line"></div><div class="line">    <span class="comment">// get the buffer queue interface</span></div><div class="line">    result = (*bqPlayerObject)-&gt;GetInterface(bqPlayerObject, SL_IID_BUFFERQUEUE,</div><div class="line">                                             &amp;bqPlayerBufferQueue);</div><div class="line">    assert(SL_RESULT_SUCCESS == result);</div><div class="line">    (<span class="keyword">void</span>)result;</div><div class="line"></div><div class="line">    <span class="comment">// register callback on the buffer queue</span></div><div class="line">    result = (*bqPlayerBufferQueue)-&gt;RegisterCallback(bqPlayerBufferQueue, bqPlayerCallback, <span class="literal">NULL</span>);</div><div class="line">    assert(SL_RESULT_SUCCESS == result);</div><div class="line">    (<span class="keyword">void</span>)result;</div><div class="line"></div><div class="line">    <span class="comment">// get the effect send interface</span></div><div class="line">    result = (*bqPlayerObject)-&gt;GetInterface(bqPlayerObject, SL_IID_EFFECTSEND,</div><div class="line">                                             &amp;bqPlayerEffectSend);</div><div class="line">    assert(SL_RESULT_SUCCESS == result);</div><div class="line">    (<span class="keyword">void</span>)result;</div><div class="line"></div><div class="line">    <span class="comment">// get the volume interface</span></div><div class="line">    result = (*bqPlayerObject)-&gt;GetInterface(bqPlayerObject, SL_IID_VOLUME, &amp;bqPlayerVolume);</div><div class="line">    assert(SL_RESULT_SUCCESS == result);</div><div class="line">    (<span class="keyword">void</span>)result;</div><div class="line"></div><div class="line">    <span class="comment">// set the player's state to playing</span></div><div class="line">    result = (*bqPlayerPlay)-&gt;SetPlayState(bqPlayerPlay, SL_PLAYSTATE_PLAYING);</div><div class="line">    assert(SL_RESULT_SUCCESS == result);</div><div class="line">    (<span class="keyword">void</span>)result;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// stop the native audio system</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">// destroy buffer queue audio player object, and invalidate all associated interfaces</span></div><div class="line">    <span class="keyword">if</span> (bqPlayerObject != <span class="literal">NULL</span>) &#123;</div><div class="line">        (*bqPlayerObject)-&gt;Destroy(bqPlayerObject);</div><div class="line">        bqPlayerObject = <span class="literal">NULL</span>;</div><div class="line">        bqPlayerPlay = <span class="literal">NULL</span>;</div><div class="line">        bqPlayerBufferQueue = <span class="literal">NULL</span>;</div><div class="line">        bqPlayerEffectSend = <span class="literal">NULL</span>;</div><div class="line">        bqPlayerMuteSolo = <span class="literal">NULL</span>;</div><div class="line">        bqPlayerVolume = <span class="literal">NULL</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// destroy output mix object, and invalidate all associated interfaces</span></div><div class="line">    <span class="keyword">if</span> (outputMixObject != <span class="literal">NULL</span>) &#123;</div><div class="line">        (*outputMixObject)-&gt;Destroy(outputMixObject);</div><div class="line">        outputMixObject = <span class="literal">NULL</span>;</div><div class="line">        outputMixEnvironmentalReverb = <span class="literal">NULL</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// destroy engine object, and invalidate all associated interfaces</span></div><div class="line">    <span class="keyword">if</span> (engineObject != <span class="literal">NULL</span>) &#123;</div><div class="line">        (*engineObject)-&gt;Destroy(engineObject);</div><div class="line">        engineObject = <span class="literal">NULL</span>;</div><div class="line">        engineEngine = <span class="literal">NULL</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 释放FFmpeg解码器</span></div><div class="line">    releaseFFmpeg();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">(<span class="keyword">char</span> *url)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> rate, channel;</div><div class="line">    LOGD(<span class="string">"...get url=%s"</span>, url);</div><div class="line">    <span class="comment">// 1、初始化FFmpeg解码器</span></div><div class="line">    initFFmpeg(&amp;rate, &amp;channel, url);</div><div class="line"></div><div class="line">    <span class="comment">// 2、初始化OpenSLES</span></div><div class="line">    initOpenSLES();</div><div class="line"></div><div class="line">    <span class="comment">// 3、初始化BufferQueue</span></div><div class="line">    initBufferQueue(rate, channel, SL_PCMSAMPLEFORMAT_FIXED_16);</div><div class="line"></div><div class="line">    <span class="comment">// 4、启动音频播放</span></div><div class="line">    bqPlayerCallback(bqPlayerBufferQueue, <span class="literal">NULL</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>FFmpegCore.c<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"log.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"FFmpegCore.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"libavcodec/avcodec.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"libavformat/avformat.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"libswscale/swscale.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"libswresample/swresample.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"libavutil/samplefmt.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SLES/OpenSLES.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SLES/OpenSLES_Android.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">uint8_t</span> *outputBuffer;</div><div class="line"><span class="keyword">size_t</span> outputBufferSize;</div><div class="line"></div><div class="line">AVPacket packet;</div><div class="line"><span class="keyword">int</span> audioStream;</div><div class="line">AVFrame *aFrame;</div><div class="line">SwrContext *swr;</div><div class="line">AVFormatContext *aFormatCtx;</div><div class="line">AVCodecContext *aCodecCtx;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">initFFmpeg</span><span class="params">(<span class="keyword">int</span> *rate, <span class="keyword">int</span> *channel, <span class="keyword">char</span> *url)</span> </span>&#123;</div><div class="line"></div><div class="line">    av_register_all();</div><div class="line">    aFormatCtx = avformat_alloc_context();</div><div class="line">    LOGD(<span class="string">"ffmpeg get url=:%s"</span>, url);</div><div class="line">    <span class="comment">// 网络音频流</span></div><div class="line">    <span class="keyword">char</span> *file_name = url;</div><div class="line"></div><div class="line">    <span class="comment">// Open audio file</span></div><div class="line">    <span class="keyword">if</span> (avformat_open_input(&amp;aFormatCtx, file_name, <span class="literal">NULL</span>, <span class="literal">NULL</span>) != <span class="number">0</span>) &#123;</div><div class="line">        LOGE(<span class="string">"Couldn't open file:%s\n"</span>, file_name);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">// Couldn't open file</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Retrieve stream information</span></div><div class="line">    <span class="keyword">if</span> (avformat_find_stream_info(aFormatCtx, <span class="literal">NULL</span>) &lt; <span class="number">0</span>) &#123;</div><div class="line">        LOGE(<span class="string">"Couldn't find stream information."</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Find the first audio stream</span></div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    audioStream = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; aFormatCtx-&gt;nb_streams; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (aFormatCtx-&gt;streams[i]-&gt;codec-&gt;codec_type == AVMEDIA_TYPE_AUDIO &amp;&amp;</div><div class="line">            audioStream &lt; <span class="number">0</span>) &#123;</div><div class="line">            audioStream = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (audioStream == <span class="number">-1</span>) &#123;</div><div class="line">        LOGE(<span class="string">"Couldn't find audio stream!"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Get a pointer to the codec context for the video stream</span></div><div class="line">    aCodecCtx = aFormatCtx-&gt;streams[audioStream]-&gt;codec;</div><div class="line"></div><div class="line">    <span class="comment">// Find the decoder for the audio stream</span></div><div class="line">    AVCodec *aCodec = avcodec_find_decoder(aCodecCtx-&gt;codec_id);</div><div class="line">    <span class="keyword">if</span> (!aCodec) &#123;</div><div class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unsupported codec!\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (avcodec_open2(aCodecCtx, aCodec, <span class="literal">NULL</span>) &lt; <span class="number">0</span>) &#123;</div><div class="line">        LOGE(<span class="string">"Could not open codec."</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">// Could not open codec</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    aFrame = av_frame_alloc();</div><div class="line"></div><div class="line">    <span class="comment">// 设置格式转换</span></div><div class="line">    swr = swr_alloc();</div><div class="line">    av_opt_set_int(swr, <span class="string">"in_channel_layout"</span>,  aCodecCtx-&gt;channel_layout, <span class="number">0</span>);</div><div class="line">    av_opt_set_int(swr, <span class="string">"out_channel_layout"</span>, aCodecCtx-&gt;channel_layout,  <span class="number">0</span>);</div><div class="line">    av_opt_set_int(swr, <span class="string">"in_sample_rate"</span>,     aCodecCtx-&gt;sample_rate, <span class="number">0</span>);</div><div class="line">    av_opt_set_int(swr, <span class="string">"out_sample_rate"</span>,    aCodecCtx-&gt;sample_rate, <span class="number">0</span>);</div><div class="line">    av_opt_set_sample_fmt(swr, <span class="string">"in_sample_fmt"</span>,  aCodecCtx-&gt;sample_fmt, <span class="number">0</span>);</div><div class="line">    av_opt_set_sample_fmt(swr, <span class="string">"out_sample_fmt"</span>, AV_SAMPLE_FMT_S16,  <span class="number">0</span>);</div><div class="line">    swr_init(swr);</div><div class="line"></div><div class="line">    <span class="comment">// 分配PCM数据缓存</span></div><div class="line">    outputBufferSize = <span class="number">8196</span>;</div><div class="line">    outputBuffer = (<span class="keyword">uint8_t</span> *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">uint8_t</span>) * outputBufferSize);</div><div class="line"></div><div class="line">    <span class="comment">// 返回sample rate和channels</span></div><div class="line">    *rate = aCodecCtx-&gt;sample_rate;</div><div class="line">    *channel = aCodecCtx-&gt;channels;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 获取PCM数据, 自动回调获取</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">getPCM</span><span class="params">(<span class="keyword">void</span> **pcm, <span class="keyword">size_t</span> *pcmSize)</span> </span>&#123;</div><div class="line">    LOGD(<span class="string">"&gt;&gt; getPcm"</span>);</div><div class="line">    <span class="keyword">while</span> (av_read_frame(aFormatCtx, &amp;packet) &gt;= <span class="number">0</span>) &#123;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> frameFinished = <span class="number">0</span>;</div><div class="line">        <span class="comment">// Is this a packet from the audio stream?</span></div><div class="line">        <span class="keyword">if</span> (packet.stream_index == audioStream) &#123;</div><div class="line">            avcodec_decode_audio4(aCodecCtx, aFrame, &amp;frameFinished, &amp;packet);</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (frameFinished) &#123;</div><div class="line">                <span class="comment">// data_size为音频数据所占的字节数</span></div><div class="line">                <span class="keyword">int</span> data_size = av_samples_get_buffer_size(</div><div class="line">                        aFrame-&gt;linesize, aCodecCtx-&gt;channels,</div><div class="line">                        aFrame-&gt;nb_samples, aCodecCtx-&gt;sample_fmt, <span class="number">1</span>);</div><div class="line">                LOGD(<span class="string">"&gt;&gt; getPcm data_size=%d"</span>, data_size);</div><div class="line">                <span class="comment">// 这里内存再分配可能存在问题</span></div><div class="line">                <span class="keyword">if</span> (data_size &gt; outputBufferSize) &#123;</div><div class="line">                    outputBufferSize = data_size;</div><div class="line">                    outputBuffer = (<span class="keyword">uint8_t</span> *) <span class="built_in">realloc</span>(outputBuffer,</div><div class="line">                                                       <span class="keyword">sizeof</span>(<span class="keyword">uint8_t</span>) * outputBufferSize);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="comment">// 音频格式转换</span></div><div class="line">                swr_convert(swr, &amp;outputBuffer, aFrame-&gt;nb_samples,</div><div class="line">                            (<span class="keyword">uint8_t</span> <span class="keyword">const</span> **) (aFrame-&gt;extended_data),</div><div class="line">                        aFrame-&gt;nb_samples);</div><div class="line"></div><div class="line">                <span class="comment">// 返回pcm数据</span></div><div class="line">                *pcm = outputBuffer;</div><div class="line">                *pcmSize = data_size;</div><div class="line">                <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 释放相关资源</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">releaseFFmpeg</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    av_packet_unref(&amp;packet);</div><div class="line">    av_free(outputBuffer);</div><div class="line">    av_free(aFrame);</div><div class="line">    avcodec_close(aCodecCtx);</div><div class="line">    avformat_close_input(&amp;aFormatCtx);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div></pre></td></tr></table></figure></p>
<p>NativePlayer.c<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">// Created by hejunlin on 17/5/6.</span></div><div class="line"><span class="comment">//</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"log.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"com_hejunlin_ffmpegaudio_NativePlayer.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"OpenSL_ES_Core.h"</span></span></div><div class="line"></div><div class="line"><span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL</span></div><div class="line"><span class="title">Java_com_hejunlin_ffmpegaudio_NativePlayer_play</span><span class="params">(JNIEnv *env, jclass type, jstring url_)</span> &#123;</div><div class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *url = (*env)-&gt;GetStringUTFChars(env, url_, <span class="number">0</span>);</div><div class="line">    LOGD(<span class="string">"start playaudio... url=%s"</span>, url);</div><div class="line"></div><div class="line">    play(url);</div><div class="line">    (*env)-&gt;ReleaseStringUTFChars(env, url_, url);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL</span></div><div class="line"><span class="title">Java_com_hejunlin_ffmpegaudio_NativePlayer_stop</span><span class="params">(JNIEnv *env, jclass type)</span> &#123;</div><div class="line"></div><div class="line">    LOGD(<span class="string">"stop"</span>);</div><div class="line">    stop();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>通过cmake，或ndk-build都可以编译，会生成一个NativePlayer.so</p>
<p><img src="http://img.blog.csdn.net/20170507110500148?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVqanVubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>效果图：</p>
<p><img src="http://img.blog.csdn.net/20170507103743452?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVqanVubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>log输出如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">05-07 10:14:04.476 6001-6097/com.hejunlin.ffmpegaudio D/Surface: Surface::setBuffersDimensions(this=0xf45b6300,w=1080,h=1920)</div><div class="line">05-07 10:14:04.491 6001-6097/com.hejunlin.ffmpegaudio D/Surface: Surface::setBuffersDimensions(this=0xf45b6300,w=1080,h=1920)</div><div class="line">05-07 10:14:04.516 6001-6097/com.hejunlin.ffmpegaudio D/Surface: Surface::setBuffersDimensions(this=0xf45b6300,w=1080,h=1920)</div><div class="line">05-07 10:14:04.525 6001-6097/com.hejunlin.ffmpegaudio D/Surface: Surface::setBuffersDimensions(this=0xf45b6300,w=1080,h=1920)</div><div class="line">05-07 10:14:04.542 6001-6097/com.hejunlin.ffmpegaudio D/Surface: Surface::setBuffersDimensions(this=0xf45b6300,w=1080,h=1920)</div><div class="line">05-07 10:14:04.556 6001-6097/com.hejunlin.ffmpegaudio D/Surface: Surface::setBuffersDimensions(this=0xf45b6300,w=1080,h=1920)</div><div class="line">05-07 10:14:04.573 6001-6097/com.hejunlin.ffmpegaudio D/Surface: Surface::setBuffersDimensions(this=0xf45b6300,w=1080,h=1920)</div><div class="line">05-07 10:14:04.577 6001-6001/com.hejunlin.ffmpegaudio W/linker: libNativePlayer.so: unused DT entry: type 0x6ffffffe arg 0x1414</div><div class="line">05-07 10:14:04.577 6001-6001/com.hejunlin.ffmpegaudio W/linker: libNativePlayer.so: unused DT entry: type 0x6fffffff arg 0x4</div><div class="line">05-07 10:14:04.578 6001-6001/com.hejunlin.ffmpegaudio W/linker: libavcodec-57.so: unused DT entry: type 0x6ffffffe arg 0x5da4</div><div class="line">05-07 10:14:04.578 6001-6001/com.hejunlin.ffmpegaudio W/linker: libavcodec-57.so: unused DT entry: type 0x6fffffff arg 0x2</div><div class="line">05-07 10:14:04.578 6001-6001/com.hejunlin.ffmpegaudio W/linker: libavformat-57.so: unused DT entry: type 0x6ffffffe arg 0x6408</div><div class="line">05-07 10:14:04.578 6001-6001/com.hejunlin.ffmpegaudio W/linker: libavformat-57.so: unused DT entry: type 0x6fffffff arg 0x2</div><div class="line">05-07 10:14:04.578 6001-6001/com.hejunlin.ffmpegaudio W/linker: libswresample-2.so: unused DT entry: type 0x6ffffffe arg 0xcd4</div><div class="line">05-07 10:14:04.578 6001-6001/com.hejunlin.ffmpegaudio W/linker: libswresample-2.so: unused DT entry: type 0x6fffffff arg 0x1</div><div class="line">05-07 10:14:04.578 6001-6001/com.hejunlin.ffmpegaudio W/linker: libswscale-4.so: unused DT entry: type 0x6ffffffe arg 0xd70</div><div class="line">05-07 10:14:04.578 6001-6001/com.hejunlin.ffmpegaudio W/linker: libswscale-4.so: unused DT entry: type 0x6fffffff arg 0x1</div><div class="line">05-07 10:14:04.589 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/NativePlayer.c: Java_com_hejunlin_ffmpegaudio_NativePlayer_play:start playaudio... url=http://qzone.60dj.com/huiyuan/201704/19/201704190533197825_35285.mp3</div><div class="line">05-07 10:14:04.589 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: play:...get url=http://qzone.60dj.com/huiyuan/201704/19/201704190533197825_35285.mp3</div><div class="line">05-07 10:14:04.590 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/FFmpegCore.c: initFFmpeg:ffmpeg get url=:http://qzone.60dj.com/huiyuan/201704/19/201704190533197825_35285.mp3</div><div class="line">05-07 10:14:04.696 6001-6001/com.hejunlin.ffmpegaudio D/libc-netbsd: getaddrinfo: qzone.60dj.com get result from proxy &gt;&gt;</div><div class="line">05-07 10:14:04.949 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: initOpenSLES:&gt;&gt; initOpenSLES...</div><div class="line">05-07 10:14:04.950 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: initOpenSLES:&gt;&gt; initOpenSLES... step 1, result = 0</div><div class="line">05-07 10:14:04.950 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: initOpenSLES:&gt;&gt; initOpenSLES...step 2, result = 0</div><div class="line">05-07 10:14:04.950 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: initOpenSLES:&gt;&gt; initOpenSLES...step 3, result = 0</div><div class="line">05-07 10:14:04.950 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: initOpenSLES:&gt;&gt; initOpenSLES...step 4, result = 0</div><div class="line">05-07 10:14:04.950 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: initOpenSLES:&gt;&gt; initOpenSLES...step 5, result = 0</div><div class="line">05-07 10:14:04.950 6001-6001/com.hejunlin.ffmpegaudio W/libOpenSLES: Leaving Object::GetInterface (SL_RESULT_FEATURE_UNSUPPORTED)</div><div class="line">05-07 10:14:04.950 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: initBufferQueue:&gt;&gt; initBufferQueue</div><div class="line">05-07 10:14:04.951 6001-6001/com.hejunlin.ffmpegaudio V/AudioTrack: set(): streamType 3, sampleRate 44100, format 0x1, channelMask 0x3, frameCount 0, flags #0, notificationFrames 0, sessionId 774, transferType 0</div><div class="line">05-07 10:14:04.951 6001-6001/com.hejunlin.ffmpegaudio V/AudioTrack: set() streamType 3 frameCount 0 flags 0000</div><div class="line">05-07 10:14:04.951 6001-6001/com.hejunlin.ffmpegaudio D/AudioTrack: audiotrack 0xf459cd80 set Type 3, rate 44100, fmt 1, chn 3, fcnt 0, flags 0000</div><div class="line">05-07 10:14:04.951 6001-6001/com.hejunlin.ffmpegaudio D/AudioTrack: mChannelMask 0x3</div><div class="line">05-07 10:14:04.953 6001-6001/com.hejunlin.ffmpegaudio V/AudioTrack: createTrack_l() output 2 afLatency 21</div><div class="line">05-07 10:14:04.953 6001-6001/com.hejunlin.ffmpegaudio V/AudioTrack: afFrameCount=1024, minBufCount=1, afSampleRate=48000, afLatency=21</div><div class="line">05-07 10:14:04.953 6001-6001/com.hejunlin.ffmpegaudio V/AudioTrack: minFrameCount: 2822, afFrameCount=1024, minBufCount=3, sampleRate=44100, afSampleRate=48000, afLatency=21</div><div class="line">05-07 10:14:04.954 6001-6001/com.hejunlin.ffmpegaudio D/AudioTrackCenter: addTrack, trackId:0xdaf0c000, frameCount:2822, sampleRate:44100, trackPtr:0xf459cd80</div><div class="line">05-07 10:14:04.954 6001-6001/com.hejunlin.ffmpegaudio D/AudioTrackCenter: mAfSampleRate 48000, sampleRate 44100, AfFrameCount 1024 , mAfSampleRate 48000, frameCount 2822</div><div class="line">05-07 10:14:04.979 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: bqPlayerCallback:&gt;&gt; buffere queue callback</div><div class="line">05-07 10:14:04.979 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/FFmpegCore.c: getPCM:&gt;&gt; getPcm</div><div class="line">05-07 10:14:04.979 6001-6681/com.hejunlin.ffmpegaudio D/AudioTrackShared: front(0x0), mIsOut 1, avail 2822, mFrameCount 2822, filled 0</div><div class="line">05-07 10:14:04.979 6001-6681/com.hejunlin.ffmpegaudio V/AudioTrack: obtainBuffer(940) returned 2822 = 940 + 1882 err 0</div><div class="line">05-07 10:14:04.979 6001-6681/com.hejunlin.ffmpegaudio D/AudioTrackShared: front(0x0), mIsOut 1, interrupt() FUTEX_WAKE</div><div class="line">05-07 10:14:04.979 6001-6681/com.hejunlin.ffmpegaudio D/AudioTrack: audiotrack 0xf459cd80 stop done</div><div class="line">05-07 10:14:04.980 6001-6001/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/FFmpegCore.c: getPCM:&gt;&gt; getPcm data_size=188</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio D/AudioTrackShared: front(0x0), mIsOut 1, avail 2822, mFrameCount 2822, filled 0</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio V/AudioTrack: obtainBuffer(940) returned 2822 = 940 + 1882 err 0</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio D/AudioTrackShared: front(0x0), mIsOut 1, avail 2775, mFrameCount 2822, filled 47</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio V/AudioTrack: obtainBuffer(893) returned 2775 = 893 + 1882 err 0</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: bqPlayerCallback:&gt;&gt; buffere queue callback</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/FFmpegCore.c: getPCM:&gt;&gt; getPcm</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/FFmpegCore.c: getPCM:&gt;&gt; getPcm data_size=4608</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio D/AudioTrackShared: front(0x0), mIsOut 1, avail 1882, mFrameCount 2822, filled 940</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio V/AudioTrack: obtainBuffer(940) returned 1882 = 940 + 942 err 0</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio D/AudioTrackShared: front(0x0), mIsOut 1, avail 1623, mFrameCount 2822, filled 1199</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio V/AudioTrack: obtainBuffer(681) returned 1623 = 681 + 942 err 0</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: bqPlayerCallback:&gt;&gt; buffere queue callback</div><div class="line">05-07 10:14:04.980 6001-6681/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/FFmpegCore.c: getPCM:&gt;&gt; getPcm</div><div class="line">05-07 10:14:04.981 6001-6681/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/FFmpegCore.c: getPCM:&gt;&gt; getPcm data_size=4608</div><div class="line">05-07 10:14:04.981 6001-6681/com.hejunlin.ffmpegaudio D/AudioTrackShared: front(0x0), mIsOut 1, avail 942, mFrameCount 2822, filled 1880</div><div class="line">05-07 10:14:04.981 6001-6681/com.hejunlin.ffmpegaudio V/AudioTrack: obtainBuffer(940) returned 942 = 940 + 2 err 0</div><div class="line">05-07 10:14:04.981 6001-6681/com.hejunlin.ffmpegaudio D/AudioTrackShared: front(0x0), mIsOut 1, avail 471, mFrameCount 2822, filled 2351</div><div class="line">05-07 10:14:04.981 6001-6681/com.hejunlin.ffmpegaudio V/AudioTrack: obtainBuffer(469) returned 471 = 469 + 2 err 0</div><div class="line">05-07 10:14:04.981 6001-6681/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/OpenSL_ES_Core.c: bqPlayerCallback:&gt;&gt; buffere queue callback</div><div class="line">05-07 10:14:04.981 6001-6681/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/FFmpegCore.c: getPCM:&gt;&gt; getPcm</div><div class="line">05-07 10:14:04.981 6001-6681/com.hejunlin.ffmpegaudio D//Users/hejunlin/AndroidStudioProjects/FFmpegAudio/app/src/main/jni/FFmpegCore.c: getPCM:&gt;&gt; getPcm data_size=4608</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;br&gt;&lt;img src=&quot;/upload/assassin.jpg&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;br&gt;&lt;/center&gt;

&lt;p&gt;思路：&lt;br&gt;1、mp3转成pcm(音频数据)，ffmpeg做的事&lt;br&gt;2、OpenSL ES引擎创建AudioPlayer，实际调用了AudioTrack&lt;br&gt;
    
    </summary>
    
      <category term="ffmpeg" scheme="http://yoursite.com/categories/ffmpeg/"/>
    
    
      <category term="OpenSL ES" scheme="http://yoursite.com/tags/OpenSL-ES/"/>
    
      <category term="ffmpeg" scheme="http://yoursite.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg总结（十二）用ffmpeg与nginx实现直播多路流并发播放</title>
    <link href="http://yoursite.com/2017/06/24/FFmpeg%E6%80%BB%E7%BB%93%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%E7%94%A8ffmpeg%E4%B8%8Enginx%E5%AE%9E%E7%8E%B0%E7%9B%B4%E6%92%AD%E5%A4%9A%E8%B7%AF%E6%B5%81%E5%B9%B6%E5%8F%91%E6%92%AD%E6%94%BE/"/>
    <id>http://yoursite.com/2017/06/24/FFmpeg总结（十二）用ffmpeg与nginx实现直播多路流并发播放/</id>
    <published>2017-06-24T09:31:32.000Z</published>
    <updated>2017-06-24T11:18:35.884Z</updated>
    
    <content type="html"><![CDATA[<center><br><img src="/upload/FinalFantasy.jpg" alt="这里写图片描述"><br></center>

<p>####下载 nginx 和 nginx-rtmp源码：<br><a href="http://nginx.org/download/nginx-1.5.10.tar.gz" target="_blank" rel="external">http://nginx.org/download/nginx-1.5.10.tar.gz</a><br><a href="https://github.com/arut/nginx-rtmp-module/archive/master.zip" target="_blank" rel="external">https://github.com/arut/nginx-rtmp-module/archive/master.zip</a></p>
<a id="more"></a>
<p>####编译安装：</p>
<ul>
<li>cd nginx-1.5.10</li>
<li>./configure –with-http_ssl_module –add-module=../nginx-rtmp-module-master</li>
<li>make</li>
<li>make install</li>
</ul>
<p>####浏览器输入localhost:8010（默认80，由于其他服务在用，这里用8010），得到如下：</p>
<center><br><img src="http://img.blog.csdn.net/20170507151721696?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVqanVubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br></center>

<p>配置nginx支持rtmp，找到nginx.cnf,在http节点结束后加入rtmp节点，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">rtmp &#123;</div><div class="line">    server &#123;</div><div class="line">            listen 1935;//监听1935端口</div><div class="line"></div><div class="line">            application yuiop &#123;//为什么叫yuiop？你懂的啦</div><div class="line">                    live on;</div><div class="line">                    record off;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>####FFmpeg开始推流，先推一个直播流来直播</p>
<p>接下来开始看下服务器流是否可看，开始拉流播放<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffplay rtmp://xxx.xxx.xxx.xxx:1935/yuiop/live</div></pre></td></tr></table></figure></p>
<p>也可以在网页端口写点js代码，也能支持播放，效果如下：</p>
<p><img src="http://img.blog.csdn.net/20170507161818546?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVqanVubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>推一个流，拉一个流不过瘾，直播可是，同时有n多个流在推拉，接着来，推拉两个，很自然也成功了。</p>
<p><img src="http://img.blog.csdn.net/20170507161629380?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVqanVubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>要是用我之前<a href="http://blog.csdn.net/hejjunlin/article/details/52376462" target="_blank" rel="external">《Android Multimedia框架总结（二）MediaPlayer框架及播放网络视频案例》</a>的例子，把直播地址，传给mediaplayer，就可以在手机上看直播了。</p>
<p>####最后来张全家福，本地电脑和直播服务器同时看直播，有2-3秒延迟</p>
<p><img src="http://img.blog.csdn.net/20170507161647372?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVqanVubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;br&gt;&lt;img src=&quot;/upload/FinalFantasy.jpg&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;br&gt;&lt;/center&gt;

&lt;p&gt;####下载 nginx 和 nginx-rtmp源码：&lt;br&gt;&lt;a href=&quot;http://nginx.org/download/nginx-1.5.10.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://nginx.org/download/nginx-1.5.10.tar.gz&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/arut/nginx-rtmp-module/archive/master.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/arut/nginx-rtmp-module/archive/master.zip&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ffmpeg" scheme="http://yoursite.com/categories/ffmpeg/"/>
    
    
      <category term="ffmpeg" scheme="http://yoursite.com/tags/ffmpeg/"/>
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>C++虚函数</title>
    <link href="http://yoursite.com/2017/06/23/C-%E8%99%9A%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2017/06/23/C-虚函数/</id>
    <published>2017-06-23T09:52:45.000Z</published>
    <updated>2017-06-24T11:19:19.748Z</updated>
    
    <content type="html"><![CDATA[<center><br><img src="/upload/game.jpg" alt="这里写图片描述"><br></center>

<p>为什么使用虚函数？什么是虚函数？虚函数是为了解决什么问题？</p>
<p>面向对象的三大特征：</p>
<ul>
<li>封装</li>
<li>多态</li>
<li>继承<a id="more"></a> 
<ul>
<li>普通虚函数</li>
<li>虚析构函数</li>
<li>纯虚函数</li>
<li>抽象类</li>
<li>接口类</li>
<li>隐藏 vs 覆盖</li>
<li>隐藏与覆盖之间的关系</li>
<li>早绑定和晚绑定</li>
<li>虚函数表</li>
<li>什么是多态?</li>
</ul>
</li>
</ul>
<p>相同对象收到不同消息或不同对象收到相同消息时产生的不同的动作。</p>
<p>静态多态 vs 动态多态</p>
<p>[-:&gt;静态多态也叫做早绑定<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rect</span>       //矩形类</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">calcArea</span><span class="params">(<span class="keyword">int</span> width)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">calcArea</span><span class="params">(<span class="keyword">int</span> width,<span class="keyword">int</span> height)</span></span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>如上面的代码，他们函数名相同，参数个数不同，一看就是互为重载的两个函数<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    Rect.rect;</div><div class="line">    rect.calcArea(<span class="number">10</span>);</div><div class="line">    rect.calcArea(<span class="number">10</span>,<span class="number">20</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>程序在编译阶段根据参数个数确定调用哪个函数。这种情况叫做静态多态（早绑定）</p>
<p>[-:&gt;动态多态也叫做晚绑定</p>
<p>比如计算面积 当给圆形计算面积时使用圆形面积的计算公式，给矩形计算面积时使用矩形面积的计算公式。也就是说有一个计算面积的形状基类，圆形和矩形类派生自形状类，圆形与矩形的类各有自己的计算面积的方法。可见动态多态是以封装和继承为基础的。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span>//形状类</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">double</span> <span class="title">calcArea</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"calcArea"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;；</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>:</span><span class="keyword">public</span> Shape      <span class="comment">//公有继承自形状类的圆形类</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Circle(<span class="keyword">double</span> r);</div><div class="line">    <span class="function"><span class="keyword">double</span> <span class="title">calcArea</span><span class="params">()</span></span>;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">double</span> m_dR;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">double</span> Circle::calcArea()</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">3.14</span>*m_dR*m_dR;</div><div class="line">&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rect</span>:</span><span class="keyword">public</span> Shape       <span class="comment">//公有继承自形状类的矩形类</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Rect(<span class="keyword">double</span> width,<span class="keyword">double</span> height);</div><div class="line">    <span class="function"><span class="keyword">double</span> <span class="title">calArea</span><span class="params">()</span></span>;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">double</span> m_dWidth;</div><div class="line">    <span class="keyword">double</span> m_dHeight;</div><div class="line">&#125;；</div><div class="line"><span class="keyword">double</span> Rect::calcArea()</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> m_dWidth*m_dHeight;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    Shape *shape1=<span class="keyword">new</span> Circle(<span class="number">4.0</span>);</div><div class="line">    Shape *shape2=<span class="keyword">new</span> Rect(<span class="number">3.0</span>,<span class="number">5.0</span>);</div><div class="line">    shape1-&gt;calcArea();</div><div class="line">    shape2-&gt;calcArea();</div><div class="line">    .......</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果打印结果的话，以上程序结果会打印两行”calcArea”，因为调用到的都是父类的calcArea函数，并不是我们想要的那样去分别调用各自的计算面积的函数。如果要想实现动态多态则必须使用虚函数</p>
<p>关键字 virtual -&gt;虚函数</p>
<p>用virtual去修饰成员函数使其成为虚函数</p>
<p>所以以上函数的修改部分如下</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">double</span> <span class="title">calcArea</span><span class="params">()</span></span>&#123;...&#125;<span class="comment">//虚函数</span></div><div class="line">    ....                                      <span class="comment">//其他部分</span></div><div class="line"><span class="keyword">private</span>:</div><div class="line">    ....</div><div class="line">&#125;；</div><div class="line">....</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>:</span><span class="keyword">public</span> Shape</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Circle(<span class="keyword">double</span> r);</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">double</span> <span class="title">calcArea</span><span class="params">()</span></span>;<span class="comment">//此处的virtual不是必须的，如果不加，系统会自动加</span></div><div class="line">                                        <span class="comment">//上，如果加上则会在后续的时候看的比较明显（推荐加上）</span></div><div class="line">    ....</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    ....</div><div class="line">&#125;;</div><div class="line">....</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rect</span>:</span><span class="keyword">public</span> Shape</div><div class="line">&#123;</div><div class="line">    Rect(<span class="keyword">double</span> width,<span class="keyword">double</span> height);</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">double</span> <span class="title">calcArea</span><span class="params">()</span></span>;</div><div class="line"><span class="keyword">private</span></div><div class="line">    ....</div><div class="line">&#125;;</div><div class="line">....</div></pre></td></tr></table></figure>
<p>这样就可以达到预期的结果了</p>
<p>多态中存在的问题</p>
<p>[-:&gt;内存泄漏，一个很严重的问题</p>
<p>例如上面的程序中，如果在圆形的类中定义一个圆心的坐标，并且坐标是在堆中申请的内存，则在mian函数中通过父类指针操作子类对象的成员函数的时候是没有问题的，可是在销毁对象内存的时候则只是执行了父类的析构函数，子类的析构函数却没有执行，这会导致内存泄漏。部分代码如下(想去借助父类指针去销毁子类对象的时候去不能去销毁子类对象)</p>
<p>如果delete后边跟父类的指针则只会执行父类的析构函数，如果delete后面跟的是子类的指针，那么它即会执行子类的析构函数，也会执行父类的析构函数</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>:</span><span class="keyword">public</span> Shape</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Circle(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">double</span> r);</div><div class="line">    ~Circle();</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">double</span> <span class="title">calcArea</span><span class="params">()</span></span>;</div><div class="line">    ....</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">double</span> m_dR;</div><div class="line">    Coordinate *m_pCenter;      <span class="comment">//坐标类指针</span></div><div class="line">    ....</div><div class="line">&#125;;</div><div class="line">Circle::Circle(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">double</span> r)</div><div class="line">&#123;</div><div class="line">    m_pCenter=<span class="keyword">new</span> Coordinate(x,y);</div><div class="line">    m_dR=r;</div><div class="line">&#125;</div><div class="line">Circle::~Circle()</div><div class="line">&#123;</div><div class="line">    <span class="keyword">delete</span> m_pCenter;</div><div class="line">    m_pCenter-<span class="literal">NULL</span>;</div><div class="line">&#125;</div><div class="line">....</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    Shape *shape1=<span class="keyword">new</span> Circle(<span class="number">3</span>,<span class="number">5</span>,<span class="number">4.0</span>);</div><div class="line">    shape1-&gt;calcArea();</div><div class="line">    <span class="keyword">delete</span> shape1;</div><div class="line">    shape1=<span class="literal">NULL</span>;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可见我们必须要去解决这个问题，不解决这个问题当使用的时候都会造成内存泄漏。面对这种情况则需要引入虚析构函数</p>
<p>虚析构函数</p>
<p>关键字 virtual -&gt;析构函数</p>
<p>之前是使用virtual去修饰成员函数，这里使用virtual去修饰析构函数，部分代码如下</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    ....</div><div class="line">    <span class="keyword">virtual</span> ~Shape();</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    ....</div><div class="line">&#125;;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>:</span><span class="keyword">public</span> Shape</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="keyword">virtual</span> ~Circle();<span class="comment">//与虚函数相同，此处virtual可以不写，系统将会自动添加，建议写上</span></div><div class="line">    ....</div><div class="line">&#125;;</div><div class="line">....</div></pre></td></tr></table></figure>
<p>这样父类指针指向的是哪个对象，哪个对象的构造函数就会先执行，然后执行父类的构造函数。销毁的时候子类的析构函数也会执行。</p>
<p>virtual关键字可以修饰普通的成员函数，也可以修饰析构函数，但并不是没有限制</p>
<p>virtual在函数中的使用限制</p>
<p>普通函数不能是虚函数，也就是说这个函数必须是某一个类的成员函数，不可以是一个全局函数，否则会导致编译错误。<br>静态成员函数不能是虚函数 static成员函数是和类同生共处的，他不属于任何对象，使用virtual也将导致错误。<br>内联函数不能是虚函数 如果修饰内联函数 如果内联函数被virtual修饰，计算机会忽略inline使它变成存粹的虚函数。<br>构造函数不能是虚函数，否则会出现编译错误。<br>虚函数实现原理</p>
<p>【：-》首先：什么是函数指针？</p>
<p>　　指针指向对象称为对象指针，指针除了指向对象还可以指向函数，函数的本质就是一段二进制代码，我们可以通过指针指向这段代码的开头，计算机就会从这个开头一直往下执行，直到函数结束，并且通过指令返回回来。函数的指针与普通的指针本质上是一样的，也是由四个基本的内存单元组成，存储着内存的地址，这个地址就是函数的首地址。</p>
<p>【：-》多态的实现原理</p>
<p>虚函数表指针：类中除了定义的函数成员，还有一个成员是虚函数表指针（占四个基本内存单元），这个指针指向一个虚函数表的起始位置，这个表会与类的定义同时出现，这个表存放着该类的虚函数指针，调用的时候可以找到该类的虚函数表指针，通过虚函数表指针找到虚函数表，通过虚函数表的偏移找到函数的入口地址，从而找到要使用的虚函数。</p>
<p>当实例化一个该类的子类对象的时候，（如果）该类的子类并没有定义虚函数，但是却从父类中继承了虚函数，所以在实例化该类子类对象的时候也会产生一个虚函数表，这个虚函数表是子类的虚函数表，但是记录的子类的虚函数地址却是与父类的是一样的。所以通过子类对象的虚函数表指针找到自己的虚函数表，在自己的虚函数表找到的要执行的函数指针也是父类的相应函数入口的地址。</p>
<p>如果我们在子类中定义了从父类继承来的虚函数，对于父类来说情况是不变的，对于子类来说它的虚函数表与之前的虚函数表是一样的，但是此时子类定义了自己的（从父类那继承来的）相应函数，所以它的虚函数表当中管于这个函数的指针就会覆盖掉原有的指向父类函数的指针的值，换句话说就是指向了自己定义的相应函数，这样如果用父类的指针，指向子类的对象，就会通过子类对象当中的虚函数表指针找到子类的虚函数表，从而通过子类的虚函数表找到子类的相应虚函数地址，而此时的地址已经是该函数自己定义的虚函数入口地址，而不是父类的相应虚函数入口地址，所以执行的将会是子类当中的虚函数。这就是多态的原理。</p>
<p>函数的覆盖和隐藏</p>
<p>父类和子类出现同名函数称为隐藏。</p>
<p>父类对象.函数函数名(…);     //调用父类的函数<br>子类对象.函数名(…);           //调用子类的函数<br>子类对象.父类名::函数名(…);//子类调用从父类继承来的函数。<br>父类和子类出现同名虚函数称为覆盖</p>
<p>父类指针=new 子类名(…);父类指针-&gt;函数名(…);//调用子类的虚函数。<br>虚析构函数的实现原理</p>
<p>[:-&gt;虚析构函数的特点：</p>
<p>当我们在父类中通过virtual修饰析构函数之后，通过父类指针指向子类对象，通过delete接父类指针就可以释放掉子类对象<br>[:-&gt;理论前提：</p>
<p>执行完子类的析构函数就会执行父类的析构函数<br>原理：</p>
<p>如果父类当中定义了虚析构函数，那么父类的虚函数表当中就会有一个父类的虚析构函数的入口指针，指向的是父类的虚析构函数，子类虚函数表当中也会产生一个子类的虚析构函数的入口指针，指向的是子类的虚析构函数，这个时候使用父类的指针指向子类的对象，delete接父类指针，就会通过指向的子类的对象找到子类的虚函数表指针，从而找到虚函数表，再虚函数表中找到子类的虚析构函数，从而使得子类的析构函数得以执行，子类的析构函数执行之后系统会自动执行父类的虚析构函数。这个是虚析构函数的实现原理。</p>
<p>纯虚函数：</p>
<p>纯虚函数的定义</p>
<p>复制代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span>  <span class="keyword">double</span> <span class="title">calcArea</span><span class="params">()</span><span class="comment">//虚函数</span></span></div><div class="line">    &#123;....&#125;</div><div class="line">    <span class="function"><span class="keyword">virtual</span>  <span class="keyword">double</span> <span class="title">calcPerimeter</span><span class="params">()</span></span>=<span class="number">0</span>;<span class="comment">//纯虚函数</span></div><div class="line">    ....</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>复制代码<br>纯虚函数没有函数体，同时在定义的时候函数名后面要加“=0”。</p>
<p>纯虚函数的实现原理：</p>
<p>在虚函数原理的基础上，虚函数表中，虚函数的地址是一个有意义的值，如果是纯虚函数就实实在在的写一个0。</p>
<p>含有纯虚函数的类被称为抽象类</p>
<p>含有纯虚函数的类被称为抽象类，比如上面代码中的类就是一个抽象类，包含一个计算周长的纯虚函数。哪怕只有一个纯虚函数，那么这个类也是一个抽象类，纯虚函数没有函数体，所以抽象类不允许实例化对象，抽象类的子类也可以是一个抽象类。抽象类子类只有把抽象类当中的所有的纯虚函数都做了实现才可以实例化对象。</p>
<p>对于抽象的类来说，我们往往不希望它能实例化，因为实例化之后也没什么用，而对于一些具体的类来说，我们要求必须实现那些要求（纯虚函数），使之成为有具体动作的类。</p>
<p>近含有纯虚函数的类称为接口类</p>
<p>如果在抽象类当中仅含有纯虚函数而不含其他任何东西，我们称之为接口类。</p>
<p>没有任何数据成员<br>仅有成员函数<br>成员函数都是纯虚函数<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span></span></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">double</span> <span class="title">calcArea</span><span class="params">()</span></span>=<span class="number">0</span><span class="comment">//计算面积</span></div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">double</span> <span class="title">calcPerimeter</span><span class="params">()</span></span>=<span class="number">0</span><span class="comment">//计算周长</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>实际的工作中接口类更多的表达一种能力或协议</p>
<p>比如<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flyable</span>//会飞</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">takeoff</span><span class="params">()</span></span>=<span class="number">0</span>;<span class="comment">//起飞</span></div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">land</span><span class="params">()</span></span>=<span class="number">0</span>;<span class="comment">//降落</span></div><div class="line">&#125;；</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bird</span>:</span><span class="keyword">public</span> Flyable</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    ....</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">takeoff</span><span class="params">()</span></span>&#123;....&#125;</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">land</span><span class="params">()</span></span>&#123;....&#125;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    ....</div><div class="line">&#125;;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">flyMatch</span><span class="params">(Flyable *a,Flyable *b)</span><span class="comment">//飞行比赛</span></span></div><div class="line"><span class="comment">//要求传入一个会飞对象的指针，此时鸟类的对象指针可以传入进来</span></div><div class="line">&#123;</div><div class="line">    ....</div><div class="line">    a-&gt;takeoff();</div><div class="line">    b-&gt;takeoff();</div><div class="line">    a-&gt;land();</div><div class="line">    b-&gt;land();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>例如上面的代码，定义一个会飞的接口，凡是实现这个接口的都是会飞的，飞行比赛要求会飞的来参加，鸟实现了会飞的接口，所以鸟可以参加飞行比赛，如果复杂点定义一个能够射击的接口，那么实现射击接口的类就可以参加战争之类需要会射击的对象，有一个战斗机类通过多继承实现会飞的接口和射击的接口还可以参加空中作战的函数呢</p>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;br&gt;&lt;img src=&quot;/upload/game.jpg&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;br&gt;&lt;/center&gt;

&lt;p&gt;为什么使用虚函数？什么是虚函数？虚函数是为了解决什么问题？&lt;/p&gt;
&lt;p&gt;面向对象的三大特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封装&lt;/li&gt;
&lt;li&gt;多态&lt;/li&gt;
&lt;li&gt;继承
    
    </summary>
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="虚函数" scheme="http://yoursite.com/tags/%E8%99%9A%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Android Multimedia框架总结（二十八）NuPlayer到OMX过程</title>
    <link href="http://yoursite.com/2017/06/23/Android-Multimedia%E6%A1%86%E6%9E%B6%E6%80%BB%E7%BB%93%EF%BC%88%E4%BA%8C%E5%8D%81%E5%85%AB%EF%BC%89NuPlayer%E5%88%B0OMX%E8%BF%87%E7%A8%8B/"/>
    <id>http://yoursite.com/2017/06/23/Android-Multimedia框架总结（二十八）NuPlayer到OMX过程/</id>
    <published>2017-06-23T09:36:06.000Z</published>
    <updated>2017-06-24T11:19:46.802Z</updated>
    
    <content type="html"><![CDATA[<center><br><img src="/upload/Knight.jpg" alt="这里写图片描述"><br></center>

<p>NuPlayer是谷歌新研发的。<br>AwesomePlayer存在BUG，谷歌早已在android M版本中弃用。<br><a id="more"></a><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">sp&lt;MediaPlayerBase&gt; MediaPlayerService::Client::createPlayer(player_type playerType)</div><div class="line">&#123;</div><div class="line">    <span class="comment">// determine if we have the right player type</span></div><div class="line">    sp&lt;MediaPlayerBase&gt; p = mPlayer;</div><div class="line">    <span class="keyword">if</span> ((p != <span class="literal">NULL</span>) &amp;&amp; (p-&gt;playerType() != playerType)) &#123;</div><div class="line">        ALOGV(<span class="string">"delete player"</span>);</div><div class="line">        p.clear();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (p == <span class="literal">NULL</span>) &#123;</div><div class="line">        p = MediaPlayerFactory::createPlayer(playerType, <span class="keyword">this</span>, notify, mPid);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (p != <span class="literal">NULL</span>) &#123;</div><div class="line">        p-&gt;setUID(mUID);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> p;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>NuPlayerDriver构造时，new NuPlayer<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">NuPlayerDriver::NuPlayerDriver()</div><div class="line">    : mState(STATE_IDLE),</div><div class="line">      mIsAsyncPrepare(<span class="literal">false</span>),</div><div class="line">      mAsyncResult(UNKNOWN_ERROR),</div><div class="line">      mSetSurfaceInProgress(<span class="literal">false</span>),</div><div class="line">      mDurationUs(<span class="number">-1</span>),</div><div class="line">      mPositionUs(<span class="number">-1</span>),</div><div class="line">      mNumFramesTotal(<span class="number">0</span>),</div><div class="line">      mNumFramesDropped(<span class="number">0</span>),</div><div class="line">      mLooper(<span class="keyword">new</span> ALooper),</div><div class="line">      mPlayerFlags(<span class="number">0</span>),</div><div class="line">      mAtEOS(<span class="literal">false</span>),</div><div class="line">      mStartupSeekTimeUs(<span class="number">-1</span>) &#123;</div><div class="line">    mLooper-&gt;setName(<span class="string">"NuPlayerDriver Looper"</span>);</div><div class="line"></div><div class="line">    mLooper-&gt;start(</div><div class="line">            <span class="literal">false</span>, <span class="comment">/* runOnCallingThread */</span></div><div class="line">            <span class="literal">true</span>,  <span class="comment">/* canCallJava */</span></div><div class="line">            PRIORITY_AUDIO);</div><div class="line"></div><div class="line">    mPlayer = <span class="keyword">new</span> NuPlayer;</div><div class="line">    mLooper-&gt;registerHandler(mPlayer);</div><div class="line"></div><div class="line">    mPlayer-&gt;setDriver(<span class="keyword">this</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>NuPlayer.h<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NuPlayer</span> :</span> <span class="keyword">public</span> AHandler &#123;</div><div class="line">    NuPlayer(<span class="keyword">pid_t</span> pid);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setUID</span><span class="params">(<span class="keyword">uid_t</span> uid)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setDriver</span><span class="params">(<span class="keyword">const</span> wp&lt;NuPlayerDriver&gt; &amp;driver)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setDataSourceAsync</span><span class="params">(<span class="keyword">const</span> sp&lt;IStreamSource&gt; &amp;source)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setDataSourceAsync</span><span class="params">(</span></span></div><div class="line">            <span class="keyword">const</span> sp&lt;IMediaHTTPService&gt; &amp;httpService,</div><div class="line">            <span class="keyword">const</span> <span class="keyword">char</span> *url,</div><div class="line">            <span class="keyword">const</span> KeyedVector&lt;String8, String8&gt; *headers);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setDataSourceAsync</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int64_t</span> offset, <span class="keyword">int64_t</span> length)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setDataSourceAsync</span><span class="params">(<span class="keyword">const</span> sp&lt;DataSource&gt; &amp;source)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">prepareAsync</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setVideoSurfaceTextureAsync</span><span class="params">(</span></span></div><div class="line">            <span class="keyword">const</span> sp&lt;IGraphicBufferProducer&gt; &amp;bufferProducer);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setAudioSink</span><span class="params">(<span class="keyword">const</span> sp&lt;MediaPlayerBase::AudioSink&gt; &amp;sink)</span></span>;</div><div class="line">    <span class="keyword">status_t</span> setPlaybackSettings(<span class="keyword">const</span> AudioPlaybackRate &amp;rate);</div><div class="line">    <span class="keyword">status_t</span> getPlaybackSettings(AudioPlaybackRate *rate <span class="comment">/* nonnull */</span>);</div><div class="line">    <span class="keyword">status_t</span> setSyncSettings(<span class="keyword">const</span> AVSyncSettings &amp;sync, <span class="keyword">float</span> videoFpsHint);</div><div class="line">    <span class="keyword">status_t</span> getSyncSettings(AVSyncSettings *sync <span class="comment">/* nonnull */</span>, <span class="keyword">float</span> *videoFps <span class="comment">/* nonnull */</span>);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pause</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">// Will notify the driver through "notifyResetComplete" once finished.</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">resetAsync</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">// Will notify the driver through "notifySeekComplete" once finished</span></div><div class="line">    <span class="comment">// and needNotify is true.</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">seekToAsync</span><span class="params">(<span class="keyword">int64_t</span> seekTimeUs, <span class="keyword">bool</span> needNotify = <span class="literal">false</span>)</span></span>;</div><div class="line"></div><div class="line">    <span class="keyword">status_t</span> setVideoScalingMode(<span class="keyword">int32_t</span> mode);</div><div class="line">    <span class="keyword">status_t</span> getTrackInfo(Parcel* reply) <span class="keyword">const</span>;</div><div class="line">    <span class="keyword">status_t</span> getSelectedTrack(<span class="keyword">int32_t</span> type, Parcel* reply) <span class="keyword">const</span>;</div><div class="line">    <span class="keyword">status_t</span> selectTrack(<span class="keyword">size_t</span> trackIndex, <span class="keyword">bool</span> select, <span class="keyword">int64_t</span> timeUs);</div><div class="line">    <span class="keyword">status_t</span> getCurrentPosition(<span class="keyword">int64_t</span> *mediaUs);</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getStats</span><span class="params">(Vector&lt;sp&lt;AMessage&gt; &gt; *mTrackStats)</span></span>;</div><div class="line"></div><div class="line">    sp&lt;MetaData&gt; getFileMeta();</div><div class="line">    <span class="function"><span class="keyword">float</span> <span class="title">getFrameRate</span><span class="params">()</span></span>;</div></pre></td></tr></table></figure></p>
<p>当调用setDataSource时，<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> NuPlayer::setDataSourceAsync(<span class="keyword">const</span> sp&lt;IStreamSource&gt; &amp;source) &#123;</div><div class="line">    sp&lt;AMessage&gt; msg = <span class="keyword">new</span> AMessage(kWhatSetDataSource, <span class="keyword">this</span>);</div><div class="line"></div><div class="line">    sp&lt;AMessage&gt; notify = <span class="keyword">new</span> AMessage(kWhatSourceNotify, <span class="keyword">this</span>);</div><div class="line"></div><div class="line">    msg-&gt;setObject(<span class="string">"source"</span>, <span class="keyword">new</span> StreamingSource(notify, source));</div><div class="line">    msg-&gt;post();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>当发送Message时<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> NuPlayer::onMessageReceived(<span class="keyword">const</span> sp&lt;AMessage&gt; &amp;msg) &#123;</div><div class="line">    <span class="keyword">switch</span> (msg-&gt;what()) &#123;</div><div class="line">        <span class="keyword">case</span> kWhatSetDataSource:</div><div class="line">        &#123;</div><div class="line">            ALOGV(<span class="string">"kWhatSetDataSource"</span>);</div><div class="line"></div><div class="line">            CHECK(mSource == <span class="literal">NULL</span>);</div><div class="line"></div><div class="line">            <span class="keyword">status_t</span> err = OK;</div><div class="line">            sp&lt;RefBase&gt; obj;</div><div class="line">            CHECK(msg-&gt;findObject(<span class="string">"source"</span>, &amp;obj));</div><div class="line">            <span class="keyword">if</span> (obj != <span class="literal">NULL</span>) &#123;</div><div class="line">                mSource = <span class="keyword">static_cast</span>&lt;Source *&gt;(obj.get());</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                err = UNKNOWN_ERROR;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            CHECK(mDriver != <span class="literal">NULL</span>);</div><div class="line">            sp&lt;NuPlayerDriver&gt; driver = mDriver.promote();</div><div class="line">            <span class="keyword">if</span> (driver != <span class="literal">NULL</span>) &#123;</div><div class="line">                driver-&gt;notifySetDataSourceCompleted(err);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>当setDataSource好了后，上层发送start开始播放流程以后，开始创建解码器<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> NuPlayer::start() &#123;</div><div class="line">    (<span class="keyword">new</span> AMessage(kWhatStart, <span class="keyword">this</span>))-&gt;post();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> NuPlayer::onMessageReceived(<span class="keyword">const</span> sp&lt;AMessage&gt; &amp;msg) &#123;</div><div class="line">    <span class="keyword">switch</span> (msg-&gt;what()) &#123;</div><div class="line">        <span class="keyword">case</span> kWhatStart:</div><div class="line">        &#123;</div><div class="line">            ALOGV(<span class="string">"kWhatStart"</span>);</div><div class="line">            <span class="keyword">if</span> (mStarted) &#123;</div><div class="line">                <span class="comment">// do not resume yet if the source is still buffering</span></div><div class="line">                <span class="keyword">if</span> (!mPausedForBuffering) &#123;</div><div class="line">                    onResume();</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                onStart();</div><div class="line">            &#125;</div><div class="line">            mPausedByClient = <span class="literal">false</span>;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接下来<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> NuPlayer::onStart(<span class="keyword">int64_t</span> startPositionUs) &#123;</div><div class="line">    <span class="keyword">if</span> (!mSourceStarted) &#123;</div><div class="line">        mSourceStarted = <span class="literal">true</span>;</div><div class="line">        mSource-&gt;start();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (startPositionUs &gt; <span class="number">0</span>) &#123;</div><div class="line">        performSeek(startPositionUs);</div><div class="line">        <span class="keyword">if</span> (mSource-&gt;getFormat(<span class="literal">false</span> <span class="comment">/* audio */</span>) == <span class="literal">NULL</span>) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    mOffloadAudio = <span class="literal">false</span>;</div><div class="line">    mAudioEOS = <span class="literal">false</span>;</div><div class="line">    mVideoEOS = <span class="literal">false</span>;</div><div class="line">    mStarted = <span class="literal">true</span>;</div><div class="line"></div><div class="line">    <span class="keyword">uint32_t</span> flags = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (mSource-&gt;isRealTime()) &#123;</div><div class="line">        flags |= Renderer::FLAG_REAL_TIME;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp&lt;MetaData&gt; audioMeta = mSource-&gt;getFormatMeta(<span class="literal">true</span> <span class="comment">/* audio */</span>);</div><div class="line">    <span class="keyword">audio_stream_type_t</span> streamType = AUDIO_STREAM_MUSIC;</div><div class="line">    <span class="keyword">if</span> (mAudioSink != <span class="literal">NULL</span>) &#123;</div><div class="line">        streamType = mAudioSink-&gt;getAudioStreamType();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp&lt;AMessage&gt; videoFormat = mSource-&gt;getFormat(<span class="literal">false</span> <span class="comment">/* audio */</span>);</div><div class="line"></div><div class="line">    mOffloadAudio =</div><div class="line">        canOffloadStream(audioMeta, (videoFormat != <span class="literal">NULL</span>), mSource-&gt;isStreaming(), streamType);</div><div class="line">    <span class="keyword">if</span> (mOffloadAudio) &#123;</div><div class="line">        flags |= Renderer::FLAG_OFFLOAD_AUDIO;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp&lt;AMessage&gt; notify = <span class="keyword">new</span> AMessage(kWhatRendererNotify, <span class="keyword">this</span>);</div><div class="line">    ++mRendererGeneration;</div><div class="line">    notify-&gt;setInt32(<span class="string">"generation"</span>, mRendererGeneration);</div><div class="line">    mRenderer = <span class="keyword">new</span> Renderer(mAudioSink, notify, flags);</div><div class="line">    mRendererLooper = <span class="keyword">new</span> ALooper;</div><div class="line">    mRendererLooper-&gt;setName(<span class="string">"NuPlayerRenderer"</span>);</div><div class="line">    mRendererLooper-&gt;start(<span class="literal">false</span>, <span class="literal">false</span>, ANDROID_PRIORITY_AUDIO);</div><div class="line">    mRendererLooper-&gt;registerHandler(mRenderer);</div><div class="line"></div><div class="line">    <span class="keyword">status_t</span> err = mRenderer-&gt;setPlaybackSettings(mPlaybackSettings);</div><div class="line">    <span class="keyword">if</span> (err != OK) &#123;</div><div class="line">        mSource-&gt;stop();</div><div class="line">        mSourceStarted = <span class="literal">false</span>;</div><div class="line">        notifyListener(MEDIA_ERROR, MEDIA_ERROR_UNKNOWN, err);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">float</span> rate = getFrameRate();</div><div class="line">    <span class="keyword">if</span> (rate &gt; <span class="number">0</span>) &#123;</div><div class="line">        mRenderer-&gt;setVideoFrameRate(rate);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (mVideoDecoder != <span class="literal">NULL</span>) &#123;</div><div class="line">        mVideoDecoder-&gt;setRenderer(mRenderer);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mAudioDecoder != <span class="literal">NULL</span>) &#123;</div><div class="line">        mAudioDecoder-&gt;setRenderer(mRenderer);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    postScanSources();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在onStart函数最后，有一个postScanSources()；实现如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> NuPlayer::postScanSources() &#123;</div><div class="line">    <span class="keyword">if</span> (mScanSourcesPending) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp&lt;AMessage&gt; msg = <span class="keyword">new</span> AMessage(kWhatScanSources, <span class="keyword">this</span>);</div><div class="line">    msg-&gt;setInt32(<span class="string">"generation"</span>, mScanSourcesGeneration);</div><div class="line">    msg-&gt;post();</div><div class="line"></div><div class="line">    mScanSourcesPending = <span class="literal">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>会发一个Message，key是kWhatScanSources：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> NuPlayer::onMessageReceived(<span class="keyword">const</span> sp&lt;AMessage&gt; &amp;msg) &#123;</div><div class="line">    <span class="keyword">switch</span> (msg-&gt;what()) &#123;</div><div class="line">        <span class="keyword">case</span> kWhatScanSources:</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int32_t</span> generation;</div><div class="line">            CHECK(msg-&gt;findInt32(<span class="string">"generation"</span>, &amp;generation));</div><div class="line">            <span class="keyword">if</span> (generation != mScanSourcesGeneration) &#123;</div><div class="line">                <span class="comment">// Drop obsolete msg.</span></div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            mScanSourcesPending = <span class="literal">false</span>;</div><div class="line"></div><div class="line">            ALOGV(<span class="string">"scanning sources haveAudio=%d, haveVideo=%d"</span>,</div><div class="line">                 mAudioDecoder != <span class="literal">NULL</span>, mVideoDecoder != <span class="literal">NULL</span>);</div><div class="line"></div><div class="line">            <span class="keyword">bool</span> mHadAnySourcesBefore =</div><div class="line">                (mAudioDecoder != <span class="literal">NULL</span>) || (mVideoDecoder != <span class="literal">NULL</span>);</div><div class="line"></div><div class="line">            <span class="comment">// initialize video before audio because successful initialization of</span></div><div class="line">            <span class="comment">// video may change deep buffer mode of audio.</span></div><div class="line">            <span class="keyword">if</span> (mSurface != <span class="literal">NULL</span>) &#123;</div><div class="line">                instantiateDecoder(<span class="literal">false</span>, &amp;mVideoDecoder);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">// Don't try to re-open audio sink if there's an existing decoder.</span></div><div class="line">            <span class="keyword">if</span> (mAudioSink != <span class="literal">NULL</span> &amp;&amp; mAudioDecoder == <span class="literal">NULL</span>) &#123;</div><div class="line">                instantiateDecoder(<span class="literal">true</span>, &amp;mAudioDecoder);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (!mHadAnySourcesBefore</div><div class="line">                    &amp;&amp; (mAudioDecoder != <span class="literal">NULL</span> || mVideoDecoder != <span class="literal">NULL</span>)) &#123;</div><div class="line">                <span class="comment">// This is the first time we've found anything playable.</span></div><div class="line"></div><div class="line">                <span class="keyword">if</span> (mSourceFlags &amp; Source::FLAG_DYNAMIC_DURATION) &#123;</div><div class="line">                    schedulePollDuration();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">status_t</span> err;</div><div class="line">            <span class="keyword">if</span> ((err = mSource-&gt;feedMoreTSData()) != OK) &#123;</div><div class="line">                <span class="keyword">if</span> (mAudioDecoder == <span class="literal">NULL</span> &amp;&amp; mVideoDecoder == <span class="literal">NULL</span>) &#123;</div><div class="line">                    <span class="comment">// We're not currently decoding anything (no audio or</span></div><div class="line">                    <span class="comment">// video tracks found) and we just ran out of input data.</span></div><div class="line"></div><div class="line">                    <span class="keyword">if</span> (err == ERROR_END_OF_STREAM) &#123;</div><div class="line">                        notifyListener(MEDIA_PLAYBACK_COMPLETE, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        notifyListener(MEDIA_ERROR, MEDIA_ERROR_UNKNOWN, err);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> ((mAudioDecoder == <span class="literal">NULL</span> &amp;&amp; mAudioSink != <span class="literal">NULL</span>)</div><div class="line">                    || (mVideoDecoder == <span class="literal">NULL</span> &amp;&amp; mSurface != <span class="literal">NULL</span>)) &#123;</div><div class="line">                msg-&gt;post(<span class="number">100000l</span>l);</div><div class="line">                mScanSourcesPending = <span class="literal">true</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>先初始化视频解码器，再初始化音频解码器。最后都会进入到instantiateDecoder，<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">status_t</span> NuPlayer::instantiateDecoder(<span class="keyword">bool</span> audio, sp&lt;DecoderBase&gt; *decoder) &#123;</div><div class="line">    <span class="comment">// The audio decoder could be cleared by tear down. If still in shut down</span></div><div class="line">    <span class="comment">// process, no need to create a new audio decoder.</span></div><div class="line">    <span class="keyword">if</span> (*decoder != <span class="literal">NULL</span> || (audio &amp;&amp; mFlushingAudio == SHUT_DOWN)) &#123;</div><div class="line">        <span class="keyword">return</span> OK;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp&lt;AMessage&gt; format = mSource-&gt;getFormat(audio);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (format == <span class="literal">NULL</span>) &#123;</div><div class="line">        <span class="keyword">return</span> -EWOULDBLOCK;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    format-&gt;setInt32(<span class="string">"priority"</span>, <span class="number">0</span> <span class="comment">/* realtime */</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (!audio) &#123;</div><div class="line">        AString mime;</div><div class="line">        CHECK(format-&gt;findString(<span class="string">"mime"</span>, &amp;mime));</div><div class="line"></div><div class="line">        sp&lt;AMessage&gt; ccNotify = <span class="keyword">new</span> AMessage(kWhatClosedCaptionNotify, <span class="keyword">this</span>);</div><div class="line">        <span class="keyword">if</span> (mCCDecoder == <span class="literal">NULL</span>) &#123;</div><div class="line">            mCCDecoder = <span class="keyword">new</span> CCDecoder(ccNotify);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mSourceFlags &amp; Source::FLAG_SECURE) &#123;</div><div class="line">            format-&gt;setInt32(<span class="string">"secure"</span>, <span class="literal">true</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mSourceFlags &amp; Source::FLAG_PROTECTED) &#123;</div><div class="line">            format-&gt;setInt32(<span class="string">"protected"</span>, <span class="literal">true</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">float</span> rate = getFrameRate();</div><div class="line">        <span class="keyword">if</span> (rate &gt; <span class="number">0</span>) &#123;</div><div class="line">            format-&gt;setFloat(<span class="string">"operating-rate"</span>, rate * mPlaybackSettings.mSpeed);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (audio) &#123;</div><div class="line">        sp&lt;AMessage&gt; notify = <span class="keyword">new</span> AMessage(kWhatAudioNotify, <span class="keyword">this</span>);</div><div class="line">        ++mAudioDecoderGeneration;</div><div class="line">        notify-&gt;setInt32(<span class="string">"generation"</span>, mAudioDecoderGeneration);</div><div class="line"></div><div class="line">        determineAudioModeChange();</div><div class="line">        <span class="keyword">if</span> (mOffloadAudio) &#123;</div><div class="line">            <span class="keyword">const</span> <span class="keyword">bool</span> hasVideo = (mSource-&gt;getFormat(<span class="literal">false</span> <span class="comment">/*audio */</span>) != <span class="literal">NULL</span>);</div><div class="line">            format-&gt;setInt32(<span class="string">"has-video"</span>, hasVideo);</div><div class="line">            *decoder = <span class="keyword">new</span> DecoderPassThrough(notify, mSource, mRenderer);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            *decoder = <span class="keyword">new</span> Decoder(notify, mSource, mPID, mRenderer);</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        sp&lt;AMessage&gt; notify = <span class="keyword">new</span> AMessage(kWhatVideoNotify, <span class="keyword">this</span>);</div><div class="line">        ++mVideoDecoderGeneration;</div><div class="line">        notify-&gt;setInt32(<span class="string">"generation"</span>, mVideoDecoderGeneration);</div><div class="line"></div><div class="line">        *decoder = <span class="keyword">new</span> Decoder(</div><div class="line">                notify, mSource, mPID, mRenderer, mSurface, mCCDecoder);</div><div class="line"></div><div class="line">        <span class="comment">// enable FRC if high-quality AV sync is requested, even if not</span></div><div class="line">        <span class="comment">// directly queuing to display, as this will even improve textureview</span></div><div class="line">        <span class="comment">// playback.</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">char</span> value[PROPERTY_VALUE_MAX];</div><div class="line">            <span class="keyword">if</span> (property_get(<span class="string">"persist.sys.media.avsync"</span>, value, <span class="literal">NULL</span>) &amp;&amp;</div><div class="line">                    (!<span class="built_in">strcmp</span>(<span class="string">"1"</span>, value) || !strcasecmp(<span class="string">"true"</span>, value))) &#123;</div><div class="line">                format-&gt;setInt32(<span class="string">"auto-frc"</span>, <span class="number">1</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    (*decoder)-&gt;init();</div><div class="line">    (*decoder)-&gt;configure(format);</div><div class="line"></div><div class="line">    <span class="comment">// allocate buffers to decrypt widevine source buffers</span></div><div class="line">    <span class="keyword">if</span> (!audio &amp;&amp; (mSourceFlags &amp; Source::FLAG_SECURE)) &#123;</div><div class="line">        Vector&lt;sp&lt;ABuffer&gt; &gt; inputBufs;</div><div class="line">        CHECK_EQ((*decoder)-&gt;getInputBuffers(&amp;inputBufs), (<span class="keyword">status_t</span>)OK);</div><div class="line"></div><div class="line">        Vector&lt;MediaBuffer *&gt; mediaBufs;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; inputBufs.size(); i++) &#123;</div><div class="line">            <span class="keyword">const</span> sp&lt;ABuffer&gt; &amp;buffer = inputBufs[i];</div><div class="line">            MediaBuffer *mbuf = <span class="keyword">new</span> MediaBuffer(buffer-&gt;data(), buffer-&gt;size());</div><div class="line">            mediaBufs.push(mbuf);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">status_t</span> err = mSource-&gt;setBuffers(audio, mediaBufs);</div><div class="line">        <span class="keyword">if</span> (err != OK) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; mediaBufs.size(); ++i) &#123;</div><div class="line">                mediaBufs[i]-&gt;release();</div><div class="line">            &#125;</div><div class="line">            mediaBufs.clear();</div><div class="line">            ALOGE(<span class="string">"Secure source didn't support secure mediaBufs."</span>);</div><div class="line">            <span class="keyword">return</span> err;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> OK;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 开始<em>decoder = new Decoder(notify, mSource, mPID, mRenderer, mSurface, mCCDecoder); 然后(</em>decoder)-&gt;configure(format);这个Decoder结构体是定义在NuPlayerDecoder.h，看下对应configure实现。<br>在NuPlayerDecoder.cpp<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> NuPlayer::Decoder::onConfigure(<span class="keyword">const</span> sp&lt;AMessage&gt; &amp;format) &#123;</div><div class="line">    CHECK(mCodec == <span class="literal">NULL</span>);</div><div class="line"></div><div class="line">    mFormatChangePending = <span class="literal">false</span>;</div><div class="line">    mTimeChangePending = <span class="literal">false</span>;</div><div class="line"></div><div class="line">    ++mBufferGeneration;</div><div class="line"></div><div class="line">    AString mime;</div><div class="line">    CHECK(format-&gt;findString(<span class="string">"mime"</span>, &amp;mime));</div><div class="line"></div><div class="line">    mIsAudio = !strncasecmp(<span class="string">"audio/"</span>, mime.c_str(), <span class="number">6</span>);</div><div class="line">    mIsVideoAVC = !strcasecmp(MEDIA_MIMETYPE_VIDEO_AVC, mime.c_str());</div><div class="line"></div><div class="line">    mComponentName = mime;</div><div class="line">    mComponentName.append(<span class="string">" decoder"</span>);</div><div class="line">    ALOGV(<span class="string">"[%s] onConfigure (surface=%p)"</span>, mComponentName.c_str(), mSurface.get());</div><div class="line"></div><div class="line">    mCodec = MediaCodec::CreateByType(</div><div class="line">            mCodecLooper, mime.c_str(), <span class="literal">false</span> <span class="comment">/* encoder */</span>, <span class="literal">NULL</span> <span class="comment">/* err */</span>, mPid);</div><div class="line">    <span class="keyword">int32_t</span> secure = <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span> (format-&gt;findInt32(<span class="string">"secure"</span>, &amp;secure) &amp;&amp; secure != <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (mCodec != <span class="literal">NULL</span>) &#123;</div><div class="line">            mCodec-&gt;getName(&amp;mComponentName);</div><div class="line">            mComponentName.append(<span class="string">".secure"</span>);</div><div class="line">            mCodec-&gt;release();</div><div class="line">            ALOGI(<span class="string">"[%s] creating"</span>, mComponentName.c_str());</div><div class="line">            mCodec = MediaCodec::CreateByComponentName(</div><div class="line">                    mCodecLooper, mComponentName.c_str(), <span class="literal">NULL</span> <span class="comment">/* err */</span>, mPid);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mCodec == <span class="literal">NULL</span>) &#123;</div><div class="line">        ALOGE(<span class="string">"Failed to create %s%s decoder"</span>,</div><div class="line">                (secure ? <span class="string">"secure "</span> : <span class="string">""</span>), mime.c_str());</div><div class="line">        handleError(UNKNOWN_ERROR);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    mIsSecure = secure;</div><div class="line"></div><div class="line">    mCodec-&gt;getName(&amp;mComponentName);</div><div class="line"></div><div class="line">    <span class="keyword">status_t</span> err;</div><div class="line">    <span class="keyword">if</span> (mSurface != <span class="literal">NULL</span>) &#123;</div><div class="line">        <span class="comment">// disconnect from surface as MediaCodec will reconnect</span></div><div class="line">        err = native_window_api_disconnect(</div><div class="line">                mSurface.get(), NATIVE_WINDOW_API_MEDIA);</div><div class="line">        <span class="comment">// We treat this as a warning, as this is a preparatory step.</span></div><div class="line">        <span class="comment">// Codec will try to connect to the surface, which is where</span></div><div class="line">        <span class="comment">// any error signaling will occur.</span></div><div class="line">        ALOGW_IF(err != OK, <span class="string">"failed to disconnect from surface: %d"</span>, err);</div><div class="line">    &#125;</div><div class="line">    err = mCodec-&gt;configure(</div><div class="line">            format, mSurface, <span class="literal">NULL</span> <span class="comment">/* crypto */</span>, <span class="number">0</span> <span class="comment">/* flags */</span>);</div><div class="line">    <span class="keyword">if</span> (err != OK) &#123;</div><div class="line">        ALOGE(<span class="string">"Failed to configure %s decoder (err=%d)"</span>, mComponentName.c_str(), err);</div><div class="line">        mCodec-&gt;release();</div><div class="line">        mCodec.clear();</div><div class="line">        handleError(err);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    rememberCodecSpecificData(format);</div><div class="line"></div><div class="line">    <span class="comment">// the following should work in configured state</span></div><div class="line">    CHECK_EQ((<span class="keyword">status_t</span>)OK, mCodec-&gt;getOutputFormat(&amp;mOutputFormat));</div><div class="line">    CHECK_EQ((<span class="keyword">status_t</span>)OK, mCodec-&gt;getInputFormat(&amp;mInputFormat));</div><div class="line"></div><div class="line">    mStats-&gt;setString(<span class="string">"mime"</span>, mime.c_str());</div><div class="line">    mStats-&gt;setString(<span class="string">"component-name"</span>, mComponentName.c_str());</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (!mIsAudio) &#123;</div><div class="line">        <span class="keyword">int32_t</span> width, height;</div><div class="line">        <span class="keyword">if</span> (mOutputFormat-&gt;findInt32(<span class="string">"width"</span>, &amp;width)</div><div class="line">                &amp;&amp; mOutputFormat-&gt;findInt32(<span class="string">"height"</span>, &amp;height)) &#123;</div><div class="line">            mStats-&gt;setInt32(<span class="string">"width"</span>, width);</div><div class="line">            mStats-&gt;setInt32(<span class="string">"height"</span>, height);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp&lt;AMessage&gt; reply = <span class="keyword">new</span> AMessage(kWhatCodecNotify, <span class="keyword">this</span>);</div><div class="line">    mCodec-&gt;setCallback(reply);</div><div class="line"></div><div class="line">    err = mCodec-&gt;start();</div><div class="line">    <span class="keyword">if</span> (err != OK) &#123;</div><div class="line">        ALOGE(<span class="string">"Failed to start %s decoder (err=%d)"</span>, mComponentName.c_str(), err);</div><div class="line">        mCodec-&gt;release();</div><div class="line">        mCodec.clear();</div><div class="line">        handleError(err);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    releaseAndResetMediaBuffers();</div><div class="line"></div><div class="line">    mPaused = <span class="literal">false</span>;</div><div class="line">    mResumePending = <span class="literal">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其中通过CreateByType创建MediaCodec，，位于MediaCodec.cpp<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// static</span></div><div class="line">sp&lt;MediaCodec&gt; MediaCodec::CreateByType(</div><div class="line">        <span class="keyword">const</span> sp&lt;ALooper&gt; &amp;looper, <span class="keyword">const</span> <span class="keyword">char</span> *mime, <span class="keyword">bool</span> encoder, <span class="keyword">status_t</span> *err, <span class="keyword">pid_t</span> pid) &#123;</div><div class="line">    sp&lt;MediaCodec&gt; codec = <span class="keyword">new</span> MediaCodec(looper, pid);</div><div class="line"></div><div class="line">    <span class="keyword">const</span> <span class="keyword">status_t</span> ret = codec-&gt;init(mime, <span class="literal">true</span> <span class="comment">/* nameIsType */</span>, encoder);</div><div class="line">    <span class="keyword">if</span> (err != <span class="literal">NULL</span>) &#123;</div><div class="line">        *err = ret;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ret == OK ? codec : <span class="literal">NULL</span>; <span class="comment">// NULL deallocates codec.</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// static</span></div><div class="line">sp&lt;MediaCodec&gt; MediaCodec::CreateByComponentName(</div><div class="line">        <span class="keyword">const</span> sp&lt;ALooper&gt; &amp;looper, <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">status_t</span> *err, <span class="keyword">pid_t</span> pid) &#123;</div><div class="line">    sp&lt;MediaCodec&gt; codec = <span class="keyword">new</span> MediaCodec(looper, pid);</div><div class="line"></div><div class="line">    <span class="keyword">const</span> <span class="keyword">status_t</span> ret = codec-&gt;init(name, <span class="literal">false</span> <span class="comment">/* nameIsType */</span>, <span class="literal">false</span> <span class="comment">/* encoder */</span>);</div><div class="line">    <span class="keyword">if</span> (err != <span class="literal">NULL</span>) &#123;</div><div class="line">        *err = ret;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ret == OK ? codec : <span class="literal">NULL</span>; <span class="comment">// NULL deallocates codec.</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>调用init函数，位于MediaCodec.cpp<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">status_t</span> MediaCodec::init(<span class="keyword">const</span> AString &amp;name, <span class="keyword">bool</span> nameIsType, <span class="keyword">bool</span> encoder) &#123;</div><div class="line">    mResourceManagerService-&gt;init();</div><div class="line"></div><div class="line">    <span class="comment">// save init parameters for reset</span></div><div class="line">    mInitName = name;</div><div class="line">    mInitNameIsType = nameIsType;</div><div class="line">    mInitIsEncoder = encoder;</div><div class="line"></div><div class="line">    <span class="comment">// Current video decoders do not return from OMX_FillThisBuffer</span></div><div class="line">    <span class="comment">// quickly, violating the OpenMAX specs, until that is remedied</span></div><div class="line">    <span class="comment">// we need to invest in an extra looper to free the main event</span></div><div class="line">    <span class="comment">// queue.</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> (nameIsType || !strncasecmp(name.c_str(), <span class="string">"omx."</span>, <span class="number">4</span>)) &#123;</div><div class="line">        mCodec = <span class="keyword">new</span> ACodec;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!nameIsType</div><div class="line">            &amp;&amp; !strncasecmp(name.c_str(), <span class="string">"android.filter."</span>, <span class="number">15</span>)) &#123;</div><div class="line">        mCodec = <span class="keyword">new</span> MediaFilter;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> NAME_NOT_FOUND;</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">    </div><div class="line">    mLooper-&gt;registerHandler(<span class="keyword">this</span>);</div><div class="line">    mCodec-&gt;setNotificationMessage(<span class="keyword">new</span> AMessage(kWhatCodecNotify, <span class="keyword">this</span>));</div><div class="line">    sp&lt;AMessage&gt; msg = <span class="keyword">new</span> AMessage(kWhatInit, <span class="keyword">this</span>);</div></pre></td></tr></table></figure></p>
<p>MediaCodec.cpp中onMessageReceived函数<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> MediaCodec::onMessageReceived(<span class="keyword">const</span> sp&lt;AMessage&gt; &amp;msg) &#123;</div><div class="line">    <span class="keyword">switch</span> (msg-&gt;what()) &#123;</div><div class="line">    <span class="keyword">case</span> kWhatInit:</div><div class="line">        &#123;</div><div class="line">            sp&lt;AReplyToken&gt; replyID;</div><div class="line">            CHECK(msg-&gt;senderAwaitsResponse(&amp;replyID));</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (mState != UNINITIALIZED) &#123;</div><div class="line">                PostReplyWithError(replyID, INVALID_OPERATION);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            mReplyID = replyID;</div><div class="line">            setState(INITIALIZING);</div><div class="line"></div><div class="line">            AString name;</div><div class="line">            CHECK(msg-&gt;findString(<span class="string">"name"</span>, &amp;name));</div><div class="line"></div><div class="line">            <span class="keyword">int32_t</span> nameIsType;</div><div class="line">            <span class="keyword">int32_t</span> encoder = <span class="literal">false</span>;</div><div class="line">            CHECK(msg-&gt;findInt32(<span class="string">"nameIsType"</span>, &amp;nameIsType));</div><div class="line">            <span class="keyword">if</span> (nameIsType) &#123;</div><div class="line">                CHECK(msg-&gt;findInt32(<span class="string">"encoder"</span>, &amp;encoder));</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            sp&lt;AMessage&gt; format = <span class="keyword">new</span> AMessage;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (nameIsType) &#123;</div><div class="line">                format-&gt;setString(<span class="string">"mime"</span>, name.c_str());</div><div class="line">                format-&gt;setInt32(<span class="string">"encoder"</span>, encoder);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                format-&gt;setString(<span class="string">"componentName"</span>, name.c_str());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            mCodec-&gt;initiateAllocateComponent(format);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>最后来到ACodec中，initiateAllocateComponent<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> ACodec::initiateAllocateComponent(<span class="keyword">const</span> sp&lt;AMessage&gt; &amp;msg) &#123;</div><div class="line">    msg-&gt;setWhat(kWhatAllocateComponent);</div><div class="line">    msg-&gt;setTarget(<span class="keyword">this</span>);</div><div class="line">    msg-&gt;post();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>消息接收<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">bool</span> ACodec::UninitializedState::onMessageReceived(<span class="keyword">const</span> sp&lt;AMessage&gt; &amp;msg) &#123;</div><div class="line">    <span class="keyword">bool</span> handled = <span class="literal">false</span>;</div><div class="line"></div><div class="line">    <span class="keyword">switch</span> (msg-&gt;what()) &#123;</div><div class="line">        <span class="keyword">case</span> ACodec::kWhatSetup:</div><div class="line">        &#123;</div><div class="line">            onSetup(msg);</div><div class="line">            handled = <span class="literal">true</span>;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">case</span> ACodec::kWhatAllocateComponent:</div><div class="line">        &#123;</div><div class="line">            onAllocateComponent(msg);</div><div class="line">            handled = <span class="literal">true</span>;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>初始化组件<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">bool</span> ACodec::UninitializedState::onAllocateComponent(<span class="keyword">const</span> sp&lt;AMessage&gt; &amp;msg) &#123;</div><div class="line">    ALOGV(<span class="string">"onAllocateComponent"</span>);</div><div class="line">    CHECK(mCodec-&gt;mNode == <span class="number">0</span>);</div><div class="line"></div><div class="line">    OMXClient client;</div><div class="line">    <span class="keyword">if</span> (client.connect() != OK) &#123;</div><div class="line">        mCodec-&gt;signalError(OMX_ErrorUndefined, NO_INIT);</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp&lt;IOMX&gt; omx = client.interface();</div><div class="line"></div><div class="line">    sp&lt;AMessage&gt; notify = <span class="keyword">new</span> AMessage(kWhatOMXDied, mCodec);</div><div class="line"></div><div class="line">    mDeathNotifier = <span class="keyword">new</span> DeathNotifier(notify);</div><div class="line">    <span class="keyword">if</span> (IInterface::asBinder(omx)-&gt;linkToDeath(mDeathNotifier) != OK) &#123;</div><div class="line">        <span class="comment">// This was a local binder, if it dies so do we, we won't care</span></div><div class="line">        <span class="comment">// about any notifications in the afterlife.</span></div><div class="line">        mDeathNotifier.clear();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Vector&lt;OMXCodec::CodecNameAndQuirks&gt; matchingCodecs;</div><div class="line"></div><div class="line">    AString mime;</div><div class="line"></div><div class="line">    AString componentName;</div><div class="line">    <span class="keyword">uint32_t</span> quirks = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int32_t</span> encoder = <span class="literal">false</span>;</div><div class="line">    <span class="keyword">if</span> (msg-&gt;findString(<span class="string">"componentName"</span>, &amp;componentName)) &#123;</div><div class="line">        <span class="keyword">ssize_t</span> index = matchingCodecs.add();</div><div class="line">        OMXCodec::CodecNameAndQuirks *entry = &amp;matchingCodecs.editItemAt(index);</div><div class="line">        entry-&gt;mName = String8(componentName.c_str());</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!OMXCodec::findCodecQuirks(</div><div class="line">                    componentName.c_str(), &amp;entry-&gt;mQuirks)) &#123;</div><div class="line">            entry-&gt;mQuirks = <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        CHECK(msg-&gt;findString(<span class="string">"mime"</span>, &amp;mime));</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!msg-&gt;findInt32(<span class="string">"encoder"</span>, &amp;encoder)) &#123;</div><div class="line">            encoder = <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        OMXCodec::findMatchingCodecs(</div><div class="line">                mime.c_str(),</div><div class="line">                encoder, <span class="comment">// createEncoder</span></div><div class="line">                <span class="literal">NULL</span>,  <span class="comment">// matchComponentName</span></div><div class="line">                <span class="number">0</span>,     <span class="comment">// flags</span></div><div class="line">                &amp;matchingCodecs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sp&lt;CodecObserver&gt; observer = <span class="keyword">new</span> CodecObserver;</div><div class="line">    IOMX::node_id node = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">status_t</span> err = NAME_NOT_FOUND;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> matchIndex = <span class="number">0</span>; matchIndex &lt; matchingCodecs.size();</div><div class="line">            ++matchIndex) &#123;</div><div class="line">        componentName = matchingCodecs.itemAt(matchIndex).mName.<span class="built_in">string</span>();</div><div class="line">        quirks = matchingCodecs.itemAt(matchIndex).mQuirks;</div><div class="line"></div><div class="line">        <span class="keyword">pid_t</span> tid = gettid();</div><div class="line">        <span class="keyword">int</span> prevPriority = androidGetThreadPriority(tid);</div><div class="line">        androidSetThreadPriority(tid, ANDROID_PRIORITY_FOREGROUND);</div><div class="line">        err = omx-&gt;allocateNode(componentName.c_str(), observer, &amp;node);</div><div class="line">        androidSetThreadPriority(tid, prevPriority);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (err == OK) &#123;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            ALOGW(<span class="string">"Allocating component '%s' failed, try next one."</span>, componentName.c_str());</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        node = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (node == <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (!mime.empty()) &#123;</div><div class="line">            ALOGE(<span class="string">"Unable to instantiate a %scoder for type '%s' with err %#x."</span>,</div><div class="line">                    encoder ? <span class="string">"en"</span> : <span class="string">"de"</span>, mime.c_str(), err);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            ALOGE(<span class="string">"Unable to instantiate codec '%s' with err %#x."</span>, componentName.c_str(), err);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        mCodec-&gt;signalError((OMX_ERRORTYPE)err, makeNoSideEffectStatus(err));</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    notify = <span class="keyword">new</span> AMessage(kWhatOMXMessageList, mCodec);</div><div class="line">    observer-&gt;setNotificationMessage(notify);</div><div class="line"></div><div class="line">    mCodec-&gt;mComponentName = componentName;</div><div class="line">    mCodec-&gt;mRenderTracker.setComponentName(componentName);</div><div class="line">    mCodec-&gt;mFlags = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (componentName.endsWith(<span class="string">".secure"</span>)) &#123;</div><div class="line">        mCodec-&gt;mFlags |= kFlagIsSecure;</div><div class="line">        mCodec-&gt;mFlags |= kFlagIsGrallocUsageProtected;</div><div class="line">        mCodec-&gt;mFlags |= kFlagPushBlankBuffersToNativeWindowOnShutdown;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    mCodec-&gt;mQuirks = quirks;</div><div class="line">    mCodec-&gt;mOMX = omx;</div><div class="line">    mCodec-&gt;mNode = node;</div><div class="line"></div><div class="line">    &#123;</div><div class="line">        sp&lt;AMessage&gt; notify = mCodec-&gt;mNotify-&gt;dup();</div><div class="line">        notify-&gt;setInt32(<span class="string">"what"</span>, CodecBase::kWhatComponentAllocated);</div><div class="line">        notify-&gt;setString(<span class="string">"componentName"</span>, mCodec-&gt;mComponentName.c_str());</div><div class="line">        notify-&gt;post();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    mCodec-&gt;changeState(mCodec-&gt;mLoadedState);</div><div class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;br&gt;&lt;img src=&quot;/upload/Knight.jpg&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;br&gt;&lt;/center&gt;

&lt;p&gt;NuPlayer是谷歌新研发的。&lt;br&gt;AwesomePlayer存在BUG，谷歌早已在android M版本中弃用。&lt;br&gt;
    
    </summary>
    
      <category term="Android Multimedia" scheme="http://yoursite.com/categories/Android-Multimedia/"/>
    
    
      <category term="NuPlayer" scheme="http://yoursite.com/tags/NuPlayer/"/>
    
  </entry>
  
</feed>
